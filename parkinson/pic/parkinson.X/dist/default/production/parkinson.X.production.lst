

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Jul 01 21:48:59 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  0111                     	;# 
    81  0112                     	;# 
    82  0113                     	;# 
    83  0114                     	;# 
    84  0115                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  0118                     	;# 
    88  0119                     	;# 
    89  011A                     	;# 
    90  011B                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  018E                     	;# 
    96  0191                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0194                     	;# 
   103  0195                     	;# 
   104  0196                     	;# 
   105  0199                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019E                     	;# 
   112  019F                     	;# 
   113  020C                     	;# 
   114  020D                     	;# 
   115  020E                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0219                     	;# 
   132  021A                     	;# 
   133  021B                     	;# 
   134  021C                     	;# 
   135  021D                     	;# 
   136  021E                     	;# 
   137  021F                     	;# 
   138  0291                     	;# 
   139  0291                     	;# 
   140  0292                     	;# 
   141  0293                     	;# 
   142  0294                     	;# 
   143  0295                     	;# 
   144  0295                     	;# 
   145  0296                     	;# 
   146  0298                     	;# 
   147  0298                     	;# 
   148  0299                     	;# 
   149  029A                     	;# 
   150  029B                     	;# 
   151  029C                     	;# 
   152  029D                     	;# 
   153  029E                     	;# 
   154  0311                     	;# 
   155  0311                     	;# 
   156  0312                     	;# 
   157  0313                     	;# 
   158  0318                     	;# 
   159  0318                     	;# 
   160  0319                     	;# 
   161  031A                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  0391                     	;# 
   166  0392                     	;# 
   167  0393                     	;# 
   168  0394                     	;# 
   169  0395                     	;# 
   170  0396                     	;# 
   171  039A                     	;# 
   172  039C                     	;# 
   173  039D                     	;# 
   174  039E                     	;# 
   175  039F                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  041C                     	;# 
   180  041D                     	;# 
   181  041E                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193                           
   194                           	psect	stringtext
   195  055A                     __pstringtext:	
   196  055A                     _dpowers:	
   197  055A  3401               	retlw	1
   198  055B  3400               	retlw	0
   199  055C  340A               	retlw	10
   200  055D  3400               	retlw	0
   201  055E  3464               	retlw	100
   202  055F  3400               	retlw	0
   203  0560  34E8               	retlw	232
   204  0561  3403               	retlw	3
   205  0562  3410               	retlw	16
   206  0563  3427               	retlw	39
   207  0564                     __end_of_dpowers:	
   208  0564                     _hexpowers:	
   209  0564  3401               	retlw	1
   210  0565  3400               	retlw	0
   211  0566  3410               	retlw	16
   212  0567  3400               	retlw	0
   213  0568  3400               	retlw	0
   214  0569  3401               	retlw	1
   215  056A  3400               	retlw	0
   216  056B  3410               	retlw	16
   217  056C                     __end_of_hexpowers:	
   218  000B                     _INTCONbits	set	11
   219  0064                     _RA4	set	100
   220  006E                     _RB6	set	110
   221  0070                     _RC0	set	112
   222  0072                     _RC2	set	114
   223  0076                     _RC6	set	118
   224  0099                     _OSCCONbits	set	153
   225  008C                     _TRISA	set	140
   226  008D                     _TRISB	set	141
   227  008E                     _TRISC	set	142
   228  0097                     _WDTCONbits	set	151
   229  0462                     _TRISA2	set	1122
   230  0464                     _TRISA4	set	1124
   231  0465                     _TRISA5	set	1125
   232  046D                     _TRISB5	set	1133
   233  046E                     _TRISB6	set	1134
   234  046F                     _TRISB7	set	1135
   235  0470                     _TRISC0	set	1136
   236  0472                     _TRISC2	set	1138
   237  0476                     _TRISC6	set	1142
   238  011D                     _APFCON0bits	set	285
   239  011E                     _APFCON1bits	set	286
   240  018C                     _ANSELA	set	396
   241  018D                     _ANSELB	set	397
   242  018E                     _ANSELC	set	398
   243  019F                     _BAUDCONbits	set	415
   244  019D                     _RCSTAbits	set	413
   245  019C                     _SPBRGH	set	412
   246  019B                     _SPBRGL	set	411
   247  019A                     _TXREG	set	410
   248  019E                     _TXSTAbits	set	414
   249  0219                     _SSP2BUF	set	537
   250  021D                     _SSP2CON1bits	set	541
   251  021C                     _SSP2STATbits	set	540
   252  056C                     STR_4:	
   253  056C  3454               	retlw	84	;'T'
   254  056D  3469               	retlw	105	;'i'
   255  056E  346D               	retlw	109	;'m'
   256  056F  3465               	retlw	101	;'e'
   257  0570  3453               	retlw	83	;'S'
   258  0571  3474               	retlw	116	;'t'
   259  0572  3461               	retlw	97	;'a'
   260  0573  346D               	retlw	109	;'m'
   261  0574  3470               	retlw	112	;'p'
   262  0575  343A               	retlw	58	;':'
   263  0576  3420               	retlw	32	;' '
   264  0577  3425               	retlw	37	;'%'
   265  0578  3432               	retlw	50	;'2'
   266  0579  3458               	retlw	88	;'X'
   267  057A  3420               	retlw	32	;' '
   268  057B  3425               	retlw	37	;'%'
   269  057C  3432               	retlw	50	;'2'
   270  057D  3458               	retlw	88	;'X'
   271  057E  3420               	retlw	32	;' '
   272  057F  3425               	retlw	37	;'%'
   273  0580  3432               	retlw	50	;'2'
   274  0581  3458               	retlw	88	;'X'
   275  0582  342C               	retlw	44	;','
   276  0583  3420               	retlw	32	;' '
   277  0584  3400               	retlw	0
   278  0585                     STR_5:	
   279  0585  3454               	retlw	84	;'T'
   280  0586  3465               	retlw	101	;'e'
   281  0587  346D               	retlw	109	;'m'
   282  0588  3470               	retlw	112	;'p'
   283  0589  3465               	retlw	101	;'e'
   284  058A  3472               	retlw	114	;'r'
   285  058B  3461               	retlw	97	;'a'
   286  058C  3474               	retlw	116	;'t'
   287  058D  3475               	retlw	117	;'u'
   288  058E  3472               	retlw	114	;'r'
   289  058F  3465               	retlw	101	;'e'
   290  0590  343A               	retlw	58	;':'
   291  0591  3420               	retlw	32	;' '
   292  0592  3425               	retlw	37	;'%'
   293  0593  3432               	retlw	50	;'2'
   294  0594  3458               	retlw	88	;'X'
   295  0595  3420               	retlw	32	;' '
   296  0596  3425               	retlw	37	;'%'
   297  0597  3432               	retlw	50	;'2'
   298  0598  3458               	retlw	88	;'X'
   299  0599  342C               	retlw	44	;','
   300  059A  3420               	retlw	32	;' '
   301  059B  3400               	retlw	0
   302  059C                     STR_6:	
   303  059C  3441               	retlw	65	;'A'
   304  059D  3464               	retlw	100	;'d'
   305  059E  3464               	retlw	100	;'d'
   306  059F  3472               	retlw	114	;'r'
   307  05A0  3465               	retlw	101	;'e'
   308  05A1  3473               	retlw	115	;'s'
   309  05A2  3473               	retlw	115	;'s'
   310  05A3  343A               	retlw	58	;':'
   311  05A4  3420               	retlw	32	;' '
   312  05A5  3425               	retlw	37	;'%'
   313  05A6  3432               	retlw	50	;'2'
   314  05A7  3458               	retlw	88	;'X'
   315  05A8  3420               	retlw	32	;' '
   316  05A9  3425               	retlw	37	;'%'
   317  05AA  3432               	retlw	50	;'2'
   318  05AB  3458               	retlw	88	;'X'
   319  05AC  3420               	retlw	32	;' '
   320  05AD  3425               	retlw	37	;'%'
   321  05AE  3432               	retlw	50	;'2'
   322  05AF  3458               	retlw	88	;'X'
   323  05B0  342C               	retlw	44	;','
   324  05B1  3420               	retlw	32	;' '
   325  05B2  3400               	retlw	0
   326  05B3                     STR_3:	
   327  05B3  3442               	retlw	66	;'B'
   328  05B4  3479               	retlw	121	;'y'
   329  05B5  3474               	retlw	116	;'t'
   330  05B6  3465               	retlw	101	;'e'
   331  05B7  3473               	retlw	115	;'s'
   332  05B8  3420               	retlw	32	;' '
   333  05B9  3477               	retlw	119	;'w'
   334  05BA  3472               	retlw	114	;'r'
   335  05BB  3469               	retlw	105	;'i'
   336  05BC  3474               	retlw	116	;'t'
   337  05BD  3474               	retlw	116	;'t'
   338  05BE  3465               	retlw	101	;'e'
   339  05BF  346E               	retlw	110	;'n'
   340  05C0  343A               	retlw	58	;':'
   341  05C1  3420               	retlw	32	;' '
   342  05C2  3425               	retlw	37	;'%'
   343  05C3  3475               	retlw	117	;'u'
   344  05C4  342C               	retlw	44	;','
   345  05C5  3420               	retlw	32	;' '
   346  05C6  3400               	retlw	0
   347  05C7                     STR_1:	
   348  05C7  3445               	retlw	69	;'E'
   349  05C8  3472               	retlw	114	;'r'
   350  05C9  3461               	retlw	97	;'a'
   351  05CA  3473               	retlw	115	;'s'
   352  05CB  3469               	retlw	105	;'i'
   353  05CC  346E               	retlw	110	;'n'
   354  05CD  3467               	retlw	103	;'g'
   355  05CE  3420               	retlw	32	;' '
   356  05CF  3462               	retlw	98	;'b'
   357  05D0  346C               	retlw	108	;'l'
   358  05D1  346F               	retlw	111	;'o'
   359  05D2  3463               	retlw	99	;'c'
   360  05D3  346B               	retlw	107	;'k'
   361  05D4  3420               	retlw	32	;' '
   362  05D5  3425               	retlw	37	;'%'
   363  05D6  3458               	retlw	88	;'X'
   364  05D7  340A               	retlw	10
   365  05D8  3400               	retlw	0
   366  05D9                     STR_8:	
   367  05D9  3430               	retlw	48	;'0'
   368  05DA  3431               	retlw	49	;'1'
   369  05DB  3432               	retlw	50	;'2'
   370  05DC  3433               	retlw	51	;'3'
   371  05DD  3434               	retlw	52	;'4'
   372  05DE  3435               	retlw	53	;'5'
   373  05DF  3436               	retlw	54	;'6'
   374  05E0  3437               	retlw	55	;'7'
   375  05E1  3438               	retlw	56	;'8'
   376  05E2  3439               	retlw	57	;'9'
   377  05E3  3441               	retlw	65	;'A'
   378  05E4  3442               	retlw	66	;'B'
   379  05E5  3443               	retlw	67	;'C'
   380  05E6  3444               	retlw	68	;'D'
   381  05E7  3445               	retlw	69	;'E'
   382  05E8  3446               	retlw	70	;'F'
   383  05E9  3400               	retlw	0
   384  05EA                     STR_2:	
   385  05EA  3445               	retlw	69	;'E'
   386  05EB  3472               	retlw	114	;'r'
   387  05EC  3461               	retlw	97	;'a'
   388  05ED  3473               	retlw	115	;'s'
   389  05EE  3469               	retlw	105	;'i'
   390  05EF  346E               	retlw	110	;'n'
   391  05F0  3467               	retlw	103	;'g'
   392  05F1  3420               	retlw	32	;' '
   393  05F2  3464               	retlw	100	;'d'
   394  05F3  346F               	retlw	111	;'o'
   395  05F4  346E               	retlw	110	;'n'
   396  05F5  3465               	retlw	101	;'e'
   397  05F6  340A               	retlw	10
   398  05F7  3400               	retlw	0
   399  05F8                     STR_7:	
   400  05F8  3453               	retlw	83	;'S'
   401  05F9  3474               	retlw	116	;'t'
   402  05FA  3461               	retlw	97	;'a'
   403  05FB  3474               	retlw	116	;'t'
   404  05FC  3475               	retlw	117	;'u'
   405  05FD  3473               	retlw	115	;'s'
   406  05FE  343A               	retlw	58	;':'
   407  05FF  3420               	retlw	32	;' '
   408  0600  3425               	retlw	37	;'%'
   409  0601  3432               	retlw	50	;'2'
   410  0602  3458               	retlw	88	;'X'
   411  0603  340A               	retlw	10
   412  0604  3400               	retlw	0
   413                           
   414                           ; #config settings
   415  0000                     
   416                           	psect	cinit
   417  0011                     start_initialization:	
   418  0011                     __initialization:	
   419                           
   420                           ; Clear objects allocated to BANK0
   421  0011  01CE               	clrf	__pbssBANK0& (0+127)
   422  0012  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   423  0013  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   424                           
   425                           ; Clear objects allocated to BANK1
   426  0014  30A0               	movlw	low __pbssBANK1
   427  0015  0084               	movwf	4
   428  0016  3000               	movlw	high __pbssBANK1
   429  0017  0085               	movwf	5
   430  0018  3020               	movlw	32
   431  0019  3187  27FA         	fcall	clear_ram0
   432  001B                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  001B                     __end_of__initialization:	
   436  001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   437  001C  0020               	movlb	0
   438  001D  3187  2F5A         	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssBANK0
   441  004E                     __pbssBANK0:	
   442  004E                     _flash_page_address:	
   443  004E                     	ds	3
   444                           
   445                           	psect	bssBANK1
   446  00A0                     __pbssBANK1:	
   447  00A0                     _payload:	
   448  00A0                     	ds	32
   449                           
   450                           	psect	clrtext
   451  07FA                     clear_ram0:	
   452                           ;	Called with FSR0 containing the base address, and
   453                           ;	WREG with the size to clear
   454                           
   455  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   456  07FB                     clrloop0:	
   457  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   458  07FC  3101               	addfsr 0,1
   459  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   460  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
   461  07FF  3400               	retlw	0	;all done for this memory range, return
   462                           
   463                           	psect	cstackCOMMON
   464  0070                     __pcstackCOMMON:	
   465  0070                     ?_isdigit:	
   466  0070                     ?_init:	
   467                           ; 1 bit 
   468                           
   469  0070                     ?_isr:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ??_isr:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_serialCharOut:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_putch:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_read_flash:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_record:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_main:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 1 bytes @ 0x0
   492  0070                     	ds	1
   493  0071                     ?_gyro_spiRW:	
   494  0071                     ?_flash_spiRW:	
   495                           ; 1 bytes @ 0x1
   496                           
   497  0071                     ??_isdigit:	
   498                           ; 1 bytes @ 0x1
   499                           
   500  0071                     ??_serialCharOut:	
   501                           ; 1 bytes @ 0x1
   502                           
   503  0071                     ?___wmul:	
   504                           ; 1 bytes @ 0x1
   505                           
   506  0071                     ?___lwdiv:	
   507                           ; 2 bytes @ 0x1
   508                           
   509  0071                     serialCharOut@toSend:	
   510                           ; 2 bytes @ 0x1
   511                           
   512  0071                     gyro_spiRW@data:	
   513                           ; 1 bytes @ 0x1
   514                           
   515  0071                     flash_spiRW@data:	
   516                           ; 1 bytes @ 0x1
   517                           
   518  0071                     _isdigit$643:	
   519                           ; 1 bytes @ 0x1
   520                           
   521  0071                     ___wmul@multiplier:	
   522                           ; 1 bytes @ 0x1
   523                           
   524  0071                     ___lwdiv@divisor:	
   525                           ; 2 bytes @ 0x1
   526                           
   527                           
   528                           ; 2 bytes @ 0x1
   529  0071                     	ds	1
   530  0072                     ??_putch:	
   531  0072                     putch@byte:	
   532                           ; 1 bytes @ 0x2
   533                           
   534  0072                     isdigit@c:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0072                     gyro_spiRW@dataLength:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0072                     flash_spiRW@dataLength:	
   541                           ; 2 bytes @ 0x2
   542                           
   543                           
   544                           ; 2 bytes @ 0x2
   545  0072                     	ds	1
   546  0073                     ___wmul@multiplicand:	
   547  0073                     ___lwdiv@dividend:	
   548                           ; 2 bytes @ 0x3
   549                           
   550                           
   551                           ; 2 bytes @ 0x3
   552  0073                     	ds	1
   553  0074                     ??_gyro_spiRW:	
   554  0074                     ??_flash_spiRW:	
   555                           ; 1 bytes @ 0x4
   556                           
   557                           
   558                           ; 1 bytes @ 0x4
   559  0074                     	ds	1
   560  0075                     ??___wmul:	
   561  0075                     ??___lwdiv:	
   562                           ; 1 bytes @ 0x5
   563                           
   564  0075                     ___wmul@product:	
   565                           ; 1 bytes @ 0x5
   566                           
   567                           
   568                           ; 2 bytes @ 0x5
   569  0075                     	ds	1
   570  0076                     gyro_spiRW@adress:	
   571  0076                     flash_spiRW@adress:	
   572                           ; 1 bytes @ 0x6
   573                           
   574  0076                     ___lwdiv@quotient:	
   575                           ; 1 bytes @ 0x6
   576                           
   577                           
   578                           ; 2 bytes @ 0x6
   579  0076                     	ds	1
   580  0077                     gyro_spiRW@i:	
   581  0077                     flash_spiRW@i:	
   582                           ; 2 bytes @ 0x7
   583                           
   584                           
   585                           ; 2 bytes @ 0x7
   586  0077                     	ds	1
   587  0078                     ___lwdiv@counter:	
   588                           
   589                           ; 1 bytes @ 0x8
   590  0078                     	ds	1
   591  0079                     ??_init:	
   592  0079                     ?_flash_read_page:	
   593                           ; 1 bytes @ 0x9
   594                           
   595  0079                     ?___lwmod:	
   596                           ; 1 bytes @ 0x9
   597                           
   598  0079                     ___lwmod@divisor:	
   599                           ; 2 bytes @ 0x9
   600                           
   601  0079                     flash_read_page@page_address:	
   602                           ; 2 bytes @ 0x9
   603                           
   604                           
   605                           ; 3 bytes @ 0x9
   606  0079                     	ds	2
   607  007B                     ___lwmod@dividend:	
   608                           
   609                           ; 2 bytes @ 0xB
   610  007B                     	ds	2
   611                           
   612                           	psect	cstackBANK0
   613  0020                     __pcstackBANK0:	
   614  0020                     ??_flash_read_page:	
   615  0020                     ??___lwmod:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 1 bytes @ 0x0
   620  0020                     	ds	1
   621  0021                     ___lwmod@counter:	
   622                           
   623                           ; 1 bytes @ 0x1
   624  0021                     	ds	1
   625  0022                     ?_printf:	
   626  0022                     printf@f:	
   627                           ; 2 bytes @ 0x2
   628                           
   629                           
   630                           ; 2 bytes @ 0x2
   631  0022                     	ds	2
   632  0024                     flash_read_page@i:	
   633                           
   634                           ; 2 bytes @ 0x4
   635  0024                     	ds	2
   636  0026                     ??_read_flash:	
   637                           
   638                           ; 1 bytes @ 0x6
   639  0026                     	ds	4
   640  002A                     ??_printf:	
   641                           
   642                           ; 1 bytes @ 0xA
   643  002A                     	ds	4
   644  002E                     printf@idx:	
   645                           
   646                           ; 1 bytes @ 0xE
   647  002E                     	ds	1
   648  002F                     printf@ap:	
   649                           
   650                           ; 1 bytes @ 0xF
   651  002F                     	ds	1
   652  0030                     printf@flag:	
   653                           
   654                           ; 1 bytes @ 0x10
   655  0030                     	ds	1
   656  0031                     printf@prec:	
   657                           
   658                           ; 1 bytes @ 0x11
   659  0031                     	ds	1
   660  0032                     printf@val:	
   661                           
   662                           ; 2 bytes @ 0x12
   663  0032                     	ds	2
   664  0034                     printf@width:	
   665                           
   666                           ; 2 bytes @ 0x14
   667  0034                     	ds	2
   668  0036                     printf@c:	
   669                           
   670                           ; 1 bytes @ 0x16
   671  0036                     	ds	1
   672  0037                     ?_flash_block_erase:	
   673  0037                     ?_dump_gyro_fifo_to_flash:	
   674                           ; 1 bytes @ 0x17
   675                           
   676  0037                     flash_block_erase@page_address:	
   677                           ; 1 bytes @ 0x17
   678                           
   679  0037                     dump_gyro_fifo_to_flash@page_address:	
   680                           ; 3 bytes @ 0x17
   681                           
   682                           
   683                           ; 3 bytes @ 0x17
   684  0037                     	ds	3
   685  003A                     ??_flash_block_erase:	
   686  003A                     ??_dump_gyro_fifo_to_flash:	
   687                           ; 1 bytes @ 0x1A
   688                           
   689                           
   690                           ; 1 bytes @ 0x1A
   691  003A                     	ds	6
   692  0040                     dump_gyro_fifo_to_flash@unread:	
   693                           
   694                           ; 2 bytes @ 0x20
   695  0040                     	ds	2
   696  0042                     dump_gyro_fifo_to_flash@pattern:	
   697                           
   698                           ; 1 bytes @ 0x22
   699  0042                     	ds	1
   700  0043                     dump_gyro_fifo_to_flash@byte_address:	
   701                           
   702                           ; 2 bytes @ 0x23
   703  0043                     	ds	2
   704  0045                     ??_record:	
   705                           
   706                           ; 1 bytes @ 0x25
   707  0045                     	ds	3
   708  0048                     record@status:	
   709                           
   710                           ; 1 bytes @ 0x28
   711  0048                     	ds	1
   712  0049                     ??_main:	
   713                           
   714                           ; 1 bytes @ 0x29
   715  0049                     	ds	3
   716  004C                     main@i:	
   717                           
   718                           ; 2 bytes @ 0x2C
   719  004C                     	ds	2
   720                           
   721                           	psect	maintext
   722  075A                     __pmaintext:	
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 403 in file "main.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  i               2   44[BANK0 ] int 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : B1F/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   744 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   745 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   746 ;;Total ram usage:        5 bytes
   747 ;; Hardware stack levels required when called:    6
   748 ;; This function calls:
   749 ;;		_init
   750 ;;		_read_flash
   751 ;;		_record
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _main
   759  075A                     _main:	
   760                           
   761                           ;main.c: 404: init();
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   765  075A  3184  2463  3187   	fcall	_init
   766                           
   767                           ;main.c: 406: for (int i = 0; i < 200; i++) {
   768  075D  0020               	movlb	0	; select bank0
   769  075E  01CC               	clrf	main@i
   770  075F  01CD               	clrf	main@i+1
   771  0760  084D               	movf	main@i+1,w
   772  0761  3A80               	xorlw	128
   773  0762  00C9               	movwf	??_main
   774  0763  3080               	movlw	128
   775  0764  0249               	subwf	??_main,w
   776  0765  1D03               	skipz
   777  0766  2F69               	goto	u1305
   778  0767  30C8               	movlw	200
   779  0768  024C               	subwf	main@i,w
   780  0769                     u1305:	
   781  0769  1803               	btfsc	3,0
   782  076A  2F8A               	goto	l186
   783  076B                     l1811:	
   784                           
   785                           ;main.c: 407: RB6 = !RB6;
   786  076B  3040               	movlw	64
   787  076C  0020               	movlb	0	; select bank0
   788  076D  068D               	xorwf	13,f
   789                           
   790                           ;main.c: 408: _delay((unsigned long)((50)*((32000000UL)/4000.0)));
   791  076E  3003               	movlw	3
   792  076F  00CB               	movwf	??_main+2
   793  0770  3008               	movlw	8
   794  0771  00CA               	movwf	??_main+1
   795  0772  3078               	movlw	120
   796  0773  00C9               	movwf	??_main
   797  0774                     u1337:	
   798  0774  0BC9               	decfsz	??_main,f
   799  0775  2F74               	goto	u1337
   800  0776  0BCA               	decfsz	??_main+1,f
   801  0777  2F74               	goto	u1337
   802  0778  0BCB               	decfsz	??_main+2,f
   803  0779  2F74               	goto	u1337
   804  077A  3001               	movlw	1
   805  077B  0020               	movlb	0	; select bank0
   806  077C  07CC               	addwf	main@i,f
   807  077D  3000               	movlw	0
   808  077E  3DCD               	addwfc	main@i+1,f
   809  077F  084D               	movf	main@i+1,w
   810  0780  3A80               	xorlw	128
   811  0781  00C9               	movwf	??_main
   812  0782  3080               	movlw	128
   813  0783  0249               	subwf	??_main,w
   814  0784  1D03               	skipz
   815  0785  2F88               	goto	u1315
   816  0786  30C8               	movlw	200
   817  0787  024C               	subwf	main@i,w
   818  0788                     u1315:	
   819  0788  1C03               	skipc
   820  0789  2F6B               	goto	l1811
   821  078A                     l186:	
   822                           
   823                           ;main.c: 409: }
   824                           ;main.c: 411: if (!RC6) {
   825  078A  0020               	movlb	0	; select bank0
   826  078B  1B0E               	btfsc	14,6	;volatile
   827  078C  2F91               	goto	l1815
   828                           
   829                           ;main.c: 412: record();
   830  078D  3186  26EF  3187   	fcall	_record
   831                           
   832                           ;main.c: 413: } else {
   833  0790  2F94               	goto	l1817
   834  0791                     l1815:	
   835                           
   836                           ;main.c: 414: read_flash();
   837  0791  318F  27CF  3187   	fcall	_read_flash
   838  0794                     l1817:	
   839                           ;main.c: 415: }
   840                           ;main.c: 417: while (1) {
   841                           
   842                           
   843                           ;main.c: 418: RB6 = !RB6;
   844  0794  3040               	movlw	64
   845  0795  0020               	movlb	0	; select bank0
   846  0796  068D               	xorwf	13,f
   847                           
   848                           ;main.c: 419: _delay((unsigned long)((100)*((32000000UL)/4000.0)));
   849  0797  3005               	movlw	5
   850  0798  00CB               	movwf	??_main+2
   851  0799  300F               	movlw	15
   852  079A  00CA               	movwf	??_main+1
   853  079B  30F4               	movlw	244
   854  079C  00C9               	movwf	??_main
   855  079D                     u1347:	
   856  079D  0BC9               	decfsz	??_main,f
   857  079E  2F9D               	goto	u1347
   858  079F  0BCA               	decfsz	??_main+1,f
   859  07A0  2F9D               	goto	u1347
   860  07A1  0BCB               	decfsz	??_main+2,f
   861  07A2  2F9D               	goto	u1347
   862  07A3  2F94               	goto	l1817
   863  07A4                     __end_of_main:	
   864                           
   865                           	psect	text1
   866  06EF                     __ptext1:	
   867 ;; *************** function _record *****************
   868 ;; Defined at:
   869 ;;		line 371 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  status          1   40[BANK0 ] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   885 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   887 ;;Total ram usage:        4 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    5
   890 ;; This function calls:
   891 ;;		_dump_gyro_fifo_to_flash
   892 ;;		_flash_block_erase
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _record
   900  06EF                     _record:	
   901                           
   902                           ;main.c: 372: unsigned char status = 0;
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _record: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   906  06EF  0020               	movlb	0	; select bank0
   907  06F0  01C8               	clrf	record@status
   908  06F1                     l176:	
   909                           ;main.c: 374: while(flash_page_address < 0x020000) {
   910                           
   911  06F1  3002               	movlw	2
   912  06F2  0020               	movlb	0	; select bank0
   913  06F3  0250               	subwf	_flash_page_address+2,w
   914  06F4  1D03               	skipz
   915  06F5  2EFC               	goto	u1295
   916  06F6  3000               	movlw	0
   917  06F7  024F               	subwf	_flash_page_address+1,w
   918  06F8  1D03               	skipz
   919  06F9  2EFC               	goto	u1295
   920  06FA  3000               	movlw	0
   921  06FB  024E               	subwf	_flash_page_address,w
   922  06FC                     u1295:	
   923  06FC  1803               	btfsc	3,0
   924  06FD  0008               	return
   925                           
   926                           ;main.c: 375: WDTCONbits.SWDTEN = 0;
   927  06FE  0021               	movlb	1	; select bank1
   928  06FF  1017               	bcf	23,0	;volatile
   929                           
   930                           ;main.c: 378: if (flash_page_address % 64 == 0) {
   931  0700  303F               	movlw	63
   932  0701  0020               	movlb	0	; select bank0
   933  0702  00C5               	movwf	??_record
   934  0703  3000               	movlw	0
   935  0704  00C6               	movwf	??_record+1
   936  0705  3000               	movlw	0
   937  0706  00C7               	movwf	??_record+2
   938  0707  084E               	movf	_flash_page_address,w
   939  0708  05C5               	andwf	??_record,f
   940  0709  084F               	movf	_flash_page_address+1,w
   941  070A  05C6               	andwf	??_record+1,f
   942  070B  0850               	movf	_flash_page_address+2,w
   943  070C  05C7               	andwf	??_record+2,f
   944  070D  0847               	movf	??_record+2,w
   945  070E  0446               	iorwf	??_record+1,w
   946  070F  0445               	iorwf	??_record,w
   947  0710  1D03               	skipz
   948  0711  2F1B               	goto	l1789
   949                           
   950                           ;main.c: 379: flash_block_erase(flash_page_address);
   951  0712  084E               	movf	_flash_page_address,w
   952  0713  00B7               	movwf	flash_block_erase@page_address
   953  0714  084F               	movf	_flash_page_address+1,w
   954  0715  00B8               	movwf	flash_block_erase@page_address+1
   955  0716  0850               	movf	_flash_page_address+2,w
   956  0717  00B9               	movwf	flash_block_erase@page_address+2
   957  0718  3186  2605  3186   	fcall	_flash_block_erase
   958  071B                     l1789:	
   959                           
   960                           ;main.c: 380: }
   961                           ;main.c: 383: RB6 = 1;
   962  071B  0020               	movlb	0	; select bank0
   963  071C  170D               	bsf	13,6	;volatile
   964                           
   965                           ;main.c: 384: status = dump_gyro_fifo_to_flash(flash_page_address);
   966  071D  084E               	movf	_flash_page_address,w
   967  071E  00B7               	movwf	dump_gyro_fifo_to_flash@page_address
   968  071F  084F               	movf	_flash_page_address+1,w
   969  0720  00B8               	movwf	dump_gyro_fifo_to_flash@page_address+1
   970  0721  0850               	movf	_flash_page_address+2,w
   971  0722  00B9               	movwf	dump_gyro_fifo_to_flash@page_address+2
   972  0723  3180  201F  3186   	fcall	_dump_gyro_fifo_to_flash
   973  0726  0020               	movlb	0	; select bank0
   974  0727  00C5               	movwf	??_record
   975  0728  0845               	movf	??_record,w
   976  0729  00C8               	movwf	record@status
   977                           
   978                           ;main.c: 385: RB6 = 0;
   979  072A  130D               	bcf	13,6	;volatile
   980                           
   981                           ;main.c: 388: if (status == 0){
   982  072B  0848               	movf	record@status,w
   983  072C  1D03               	btfss	3,2
   984  072D  2F39               	goto	l1797
   985                           
   986                           ;main.c: 389: flash_page_address++;
   987  072E  3001               	movlw	1
   988  072F  07CE               	addwf	_flash_page_address,f
   989  0730  3000               	movlw	0
   990  0731  1803               	skipnc
   991  0732  3001               	movlw	1
   992  0733  07CF               	addwf	_flash_page_address+1,f
   993  0734  3000               	movlw	0
   994  0735  1803               	skipnc
   995  0736  3001               	movlw	1
   996  0737  07D0               	addwf	_flash_page_address+2,f
   997                           
   998                           ;main.c: 390: } else {
   999  0738  2F55               	goto	l1799
  1000  0739                     l1797:	
  1001                           
  1002                           ;main.c: 391: flash_page_address += 64;
  1003  0739  3040               	movlw	64
  1004  073A  07CE               	addwf	_flash_page_address,f
  1005  073B  3000               	movlw	0
  1006  073C  1803               	skipnc
  1007  073D  3001               	movlw	1
  1008  073E  07CF               	addwf	_flash_page_address+1,f
  1009  073F  3000               	movlw	0
  1010  0740  1803               	skipnc
  1011  0741  3001               	movlw	1
  1012  0742  07D0               	addwf	_flash_page_address+2,f
  1013                           
  1014                           ;main.c: 392: flash_page_address = flash_page_address & 0xFFFFC0;
  1015  0743  30C0               	movlw	192
  1016  0744  00C5               	movwf	??_record
  1017  0745  30FF               	movlw	255
  1018  0746  00C6               	movwf	??_record+1
  1019  0747  30FF               	movlw	255
  1020  0748  00C7               	movwf	??_record+2
  1021  0749  084E               	movf	_flash_page_address,w
  1022  074A  05C5               	andwf	??_record,f
  1023  074B  084F               	movf	_flash_page_address+1,w
  1024  074C  05C6               	andwf	??_record+1,f
  1025  074D  0850               	movf	_flash_page_address+2,w
  1026  074E  05C7               	andwf	??_record+2,f
  1027  074F  0845               	movf	??_record,w
  1028  0750  00CE               	movwf	_flash_page_address
  1029  0751  0846               	movf	??_record+1,w
  1030  0752  00CF               	movwf	_flash_page_address+1
  1031  0753  0847               	movf	??_record+2,w
  1032  0754  00D0               	movwf	_flash_page_address+2
  1033  0755                     l1799:	
  1034                           
  1035                           ;main.c: 393: }
  1036                           ;main.c: 396: WDTCONbits.SWDTEN = 1;
  1037  0755  0021               	movlb	1	; select bank1
  1038  0756  1417               	bsf	23,0	;volatile
  1039  0757  0063               	sleep	;# 
  1040                           
  1041                           ;main.c: 398: __nop();
  1042  0758  0000               	nop
  1043  0759  2EF1               	goto	l176
  1044  075A                     __end_of_record:	
  1045                           
  1046                           	psect	text2
  1047  0605                     __ptext2:	
  1048 ;; *************** function _flash_block_erase *****************
  1049 ;; Defined at:
  1050 ;;		line 234 in file "main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  page_address    3   23[BANK0 ] unsigned um
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1064 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1067 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1068 ;;Total ram usage:        7 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    4
  1071 ;; This function calls:
  1072 ;;		_flash_spiRW
  1073 ;;		_printf
  1074 ;; This function is called by:
  1075 ;;		_record
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _flash_block_erase
  1081  0605                     _flash_block_erase:	
  1082                           
  1083                           ;main.c: 235: printf("Erasing block %X\n", page_address);
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _flash_block_erase: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1087  0605  30C7               	movlw	low (STR_1| (0+32768))
  1088  0606  0020               	movlb	0	; select bank0
  1089  0607  00A2               	movwf	printf@f
  1090  0608  3085               	movlw	high (STR_1| (0+32768))
  1091  0609  00A3               	movwf	printf@f+1
  1092  060A  0837               	movf	flash_block_erase@page_address,w
  1093  060B  00A4               	movwf	?_printf+2
  1094  060C  0838               	movf	flash_block_erase@page_address+1,w
  1095  060D  00A5               	movwf	?_printf+3
  1096  060E  0839               	movf	flash_block_erase@page_address+2,w
  1097  060F  00A6               	movwf	?_printf+4
  1098  0610  3182  22EC  3186   	fcall	_printf
  1099                           
  1100                           ;main.c: 237: payload[0] = 0xA0;
  1101  0613  30A0               	movlw	160
  1102  0614  0020               	movlb	0	; select bank0
  1103  0615  00BA               	movwf	??_flash_block_erase
  1104  0616  083A               	movf	??_flash_block_erase,w
  1105  0617  0021               	movlb	1	; select bank1
  1106  0618  00A0               	movwf	_payload^(0+128)
  1107                           
  1108                           ;main.c: 238: payload[1] = 0x00;
  1109  0619  01A1               	clrf	(_payload^(0+128)+1)
  1110                           
  1111                           ;main.c: 239: flash_spiRW(0x1F, payload, 2);
  1112  061A  30A0               	movlw	(low (_payload| 0))& (0+255)
  1113  061B  0020               	movlb	0	; select bank0
  1114  061C  00BA               	movwf	??_flash_block_erase
  1115  061D  083A               	movf	??_flash_block_erase,w
  1116  061E  00F1               	movwf	flash_spiRW@data
  1117  061F  3002               	movlw	2
  1118  0620  00F2               	movwf	flash_spiRW@dataLength
  1119  0621  3000               	movlw	0
  1120  0622  00F3               	movwf	flash_spiRW@dataLength+1
  1121  0623  301F               	movlw	31
  1122  0624  318F  2773  3186   	fcall	_flash_spiRW
  1123                           
  1124                           ;main.c: 241: flash_spiRW(0x06, payload, 0);
  1125  0627  30A0               	movlw	(low (_payload| 0))& (0+255)
  1126  0628  0020               	movlb	0	; select bank0
  1127  0629  00BA               	movwf	??_flash_block_erase
  1128  062A  083A               	movf	??_flash_block_erase,w
  1129  062B  00F1               	movwf	flash_spiRW@data
  1130  062C  3000               	movlw	0
  1131  062D  00F2               	movwf	flash_spiRW@dataLength
  1132  062E  00F3               	movwf	flash_spiRW@dataLength+1
  1133  062F  3006               	movlw	6
  1134  0630  318F  2773  3186   	fcall	_flash_spiRW
  1135                           
  1136                           ;main.c: 243: payload[0] = (page_address & 0xFF0000) >> 16;
  1137  0633  0020               	movlb	0	; select bank0
  1138  0634  0837               	movf	flash_block_erase@page_address,w
  1139  0635  00BA               	movwf	??_flash_block_erase
  1140  0636  0838               	movf	flash_block_erase@page_address+1,w
  1141  0637  00BB               	movwf	??_flash_block_erase+1
  1142  0638  0839               	movf	flash_block_erase@page_address+2,w
  1143  0639  00BC               	movwf	??_flash_block_erase+2
  1144  063A  3010               	movlw	16
  1145  063B                     u1175:	
  1146  063B  36BC               	lsrf	??_flash_block_erase+2,f
  1147  063C  0CBB               	rrf	??_flash_block_erase+1,f
  1148  063D  0CBA               	rrf	??_flash_block_erase,f
  1149  063E  0B89               	decfsz	9,f
  1150  063F  2E3B               	goto	u1175
  1151  0640  083A               	movf	??_flash_block_erase,w
  1152  0641  00BD               	movwf	??_flash_block_erase+3
  1153  0642  083D               	movf	??_flash_block_erase+3,w
  1154  0643  0021               	movlb	1	; select bank1
  1155  0644  00A0               	movwf	_payload^(0+128)
  1156                           
  1157                           ;main.c: 244: payload[1] = (page_address & 0x00FF00) >> 8;
  1158  0645  0020               	movlb	0	; select bank0
  1159  0646  0837               	movf	flash_block_erase@page_address,w
  1160  0647  00BA               	movwf	??_flash_block_erase
  1161  0648  0838               	movf	flash_block_erase@page_address+1,w
  1162  0649  00BB               	movwf	??_flash_block_erase+1
  1163  064A  0839               	movf	flash_block_erase@page_address+2,w
  1164  064B  00BC               	movwf	??_flash_block_erase+2
  1165  064C  3008               	movlw	8
  1166  064D                     u1185:	
  1167  064D  36BC               	lsrf	??_flash_block_erase+2,f
  1168  064E  0CBB               	rrf	??_flash_block_erase+1,f
  1169  064F  0CBA               	rrf	??_flash_block_erase,f
  1170  0650  0B89               	decfsz	9,f
  1171  0651  2E4D               	goto	u1185
  1172  0652  083A               	movf	??_flash_block_erase,w
  1173  0653  00BD               	movwf	??_flash_block_erase+3
  1174  0654  083D               	movf	??_flash_block_erase+3,w
  1175  0655  0021               	movlb	1	; select bank1
  1176  0656  00A1               	movwf	(_payload^(0+128)+1)
  1177                           
  1178                           ;main.c: 245: payload[2] = (page_address & 0x0000FF);
  1179  0657  0020               	movlb	0	; select bank0
  1180  0658  0837               	movf	flash_block_erase@page_address,w
  1181  0659  00BA               	movwf	??_flash_block_erase
  1182  065A  083A               	movf	??_flash_block_erase,w
  1183  065B  0021               	movlb	1	; select bank1
  1184  065C  00A2               	movwf	(_payload^(0+128)+2)
  1185                           
  1186                           ;main.c: 246: flash_spiRW(0xD8, payload, 3);
  1187  065D  30A0               	movlw	(low (_payload| 0))& (0+255)
  1188  065E  0020               	movlb	0	; select bank0
  1189  065F  00BA               	movwf	??_flash_block_erase
  1190  0660  083A               	movf	??_flash_block_erase,w
  1191  0661  00F1               	movwf	flash_spiRW@data
  1192  0662  3003               	movlw	3
  1193  0663  00F2               	movwf	flash_spiRW@dataLength
  1194  0664  3000               	movlw	0
  1195  0665  00F3               	movwf	flash_spiRW@dataLength+1
  1196  0666  30D8               	movlw	216
  1197  0667  318F  2773  3186   	fcall	_flash_spiRW
  1198                           
  1199                           ;main.c: 248: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
  1200  066A  3068               	movlw	104
  1201  066B  0020               	movlb	0	; select bank0
  1202  066C  00BB               	movwf	??_flash_block_erase+1
  1203  066D  30E4               	movlw	228
  1204  066E  00BA               	movwf	??_flash_block_erase
  1205  066F                     u1357:	
  1206  066F  0BBA               	decfsz	??_flash_block_erase,f
  1207  0670  2E6F               	goto	u1357
  1208  0671  0BBB               	decfsz	??_flash_block_erase+1,f
  1209  0672  2E6F               	goto	u1357
  1210  0673  0000               	nop
  1211                           
  1212                           ;main.c: 249: printf("Erasing done\n");
  1213  0674  30EA               	movlw	low (STR_2| (0+32768))
  1214  0675  0020               	movlb	0	; select bank0
  1215  0676  00A2               	movwf	printf@f
  1216  0677  3085               	movlw	high (STR_2| (0+32768))
  1217  0678  00A3               	movwf	printf@f+1
  1218  0679  3182  22EC         	fcall	_printf
  1219  067B  0008               	return
  1220  067C                     __end_of_flash_block_erase:	
  1221                           
  1222                           	psect	text3
  1223  001F                     __ptext3:	
  1224 ;; *************** function _dump_gyro_fifo_to_flash *****************
  1225 ;; Defined at:
  1226 ;;		line 253 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  page_address    3   23[BANK0 ] unsigned um
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  byte_address    2   35[BANK0 ] unsigned int 
  1231 ;;  unread          2   32[BANK0 ] unsigned int 
  1232 ;;  pattern         1   34[BANK0 ] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      unsigned char 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1242 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1243 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1244 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1245 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1246 ;;Total ram usage:       14 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    4
  1249 ;; This function calls:
  1250 ;;		_flash_spiRW
  1251 ;;		_gyro_spiRW
  1252 ;;		_printf
  1253 ;; This function is called by:
  1254 ;;		_record
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _dump_gyro_fifo_to_flash
  1260  001F                     _dump_gyro_fifo_to_flash:	
  1261                           
  1262                           ;main.c: 255: unsigned int unread = 0x01;
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _dump_gyro_fifo_to_flash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1266  001F  3001               	movlw	1
  1267  0020  0020               	movlb	0	; select bank0
  1268  0021  00C0               	movwf	dump_gyro_fifo_to_flash@unread
  1269  0022  3000               	movlw	0
  1270  0023  00C1               	movwf	dump_gyro_fifo_to_flash@unread+1
  1271                           
  1272                           ;main.c: 256: unsigned int byte_address = 0x0000;
  1273  0024  01C3               	clrf	dump_gyro_fifo_to_flash@byte_address
  1274  0025  01C4               	clrf	dump_gyro_fifo_to_flash@byte_address+1
  1275                           
  1276                           ;main.c: 257: unsigned char pattern = 0xFF;
  1277  0026  30FF               	movlw	255
  1278  0027  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1279  0028  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1280  0029  00C2               	movwf	dump_gyro_fifo_to_flash@pattern
  1281                           
  1282                           ;main.c: 259: gyro_spiRW(0xBA, payload, 2);
  1283  002A  30A0               	movlw	(low (_payload| 0))& (0+255)
  1284  002B  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1285  002C  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1286  002D  00F1               	movwf	gyro_spiRW@data
  1287  002E  3002               	movlw	2
  1288  002F  00F2               	movwf	gyro_spiRW@dataLength
  1289  0030  3000               	movlw	0
  1290  0031  00F3               	movwf	gyro_spiRW@dataLength+1
  1291  0032  30BA               	movlw	186
  1292  0033  318F  27A1  3180   	fcall	_gyro_spiRW
  1293                           
  1294                           ;main.c: 260: unread = (payload[1] << 8) + payload[0];
  1295  0036  0021               	movlb	1	; select bank1
  1296  0037  0820               	movf	_payload^(0+128),w
  1297  0038  0020               	movlb	0	; select bank0
  1298  0039  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1299  003A  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  1300  003B  0021               	movlb	1	; select bank1
  1301  003C  0821               	movf	(_payload^(0+128)+1),w
  1302  003D  0020               	movlb	0	; select bank0
  1303  003E  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1304  003F  01BD               	clrf	??_dump_gyro_fifo_to_flash+3
  1305  0040  083C               	movf	??_dump_gyro_fifo_to_flash+2,w
  1306  0041  00BD               	movwf	??_dump_gyro_fifo_to_flash+3
  1307  0042  01BC               	clrf	??_dump_gyro_fifo_to_flash+2
  1308  0043  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1309  0044  073C               	addwf	??_dump_gyro_fifo_to_flash+2,w
  1310  0045  00C0               	movwf	dump_gyro_fifo_to_flash@unread
  1311  0046  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  1312  0047  3D3D               	addwfc	??_dump_gyro_fifo_to_flash+3,w
  1313  0048  00C1               	movwf	dump_gyro_fifo_to_flash@unread+1
  1314                           
  1315                           ;main.c: 262: if (unread <= 12) return;
  1316  0049  3000               	movlw	0
  1317  004A  0241               	subwf	dump_gyro_fifo_to_flash@unread+1,w
  1318  004B  300D               	movlw	13
  1319  004C  1903               	skipnz
  1320  004D  0240               	subwf	dump_gyro_fifo_to_flash@unread,w
  1321  004E  1C03               	btfss	3,0
  1322  004F  0008               	return
  1323                           
  1324                           ;main.c: 264: payload[0] = 0xA0;
  1325  0050  30A0               	movlw	160
  1326  0051  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1327  0052  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1328  0053  0021               	movlb	1	; select bank1
  1329  0054  00A0               	movwf	_payload^(0+128)
  1330                           
  1331                           ;main.c: 265: payload[1] = 0x00;
  1332  0055  01A1               	clrf	(_payload^(0+128)+1)
  1333                           
  1334                           ;main.c: 266: flash_spiRW(0x1F, payload, 2);
  1335  0056  30A0               	movlw	(low (_payload| 0))& (0+255)
  1336  0057  0020               	movlb	0	; select bank0
  1337  0058  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1338  0059  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1339  005A  00F1               	movwf	flash_spiRW@data
  1340  005B  3002               	movlw	2
  1341  005C  00F2               	movwf	flash_spiRW@dataLength
  1342  005D  3000               	movlw	0
  1343  005E  00F3               	movwf	flash_spiRW@dataLength+1
  1344  005F  301F               	movlw	31
  1345  0060  318F  2773  3180   	fcall	_flash_spiRW
  1346                           
  1347                           ;main.c: 268: flash_spiRW(0x06, payload, 0);
  1348  0063  30A0               	movlw	(low (_payload| 0))& (0+255)
  1349  0064  0020               	movlb	0	; select bank0
  1350  0065  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1351  0066  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1352  0067  00F1               	movwf	flash_spiRW@data
  1353  0068  3000               	movlw	0
  1354  0069  00F2               	movwf	flash_spiRW@dataLength
  1355  006A  00F3               	movwf	flash_spiRW@dataLength+1
  1356  006B  3006               	movlw	6
  1357  006C  318F  2773  3180   	fcall	_flash_spiRW
  1358                           
  1359                           ;main.c: 270: payload[0] = 0x00;
  1360  006F  0021               	movlb	1	; select bank1
  1361  0070  01A0               	clrf	_payload^(0+128)
  1362                           
  1363                           ;main.c: 271: payload[1] = 0x00;
  1364  0071  01A1               	clrf	(_payload^(0+128)+1)
  1365                           
  1366                           ;main.c: 272: payload[2] = 0xFF;
  1367  0072  30FF               	movlw	255
  1368  0073  0020               	movlb	0	; select bank0
  1369  0074  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1370  0075  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1371  0076  0021               	movlb	1	; select bank1
  1372  0077  00A2               	movwf	(_payload^(0+128)+2)
  1373                           
  1374                           ;main.c: 273: flash_spiRW(0x02, payload, 3);
  1375  0078  30A0               	movlw	(low (_payload| 0))& (0+255)
  1376  0079  0020               	movlb	0	; select bank0
  1377  007A  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1378  007B  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1379  007C  00F1               	movwf	flash_spiRW@data
  1380  007D  3003               	movlw	3
  1381  007E  00F2               	movwf	flash_spiRW@dataLength
  1382  007F  3000               	movlw	0
  1383  0080  00F3               	movwf	flash_spiRW@dataLength+1
  1384  0081  3002               	movlw	2
  1385  0082  318F  2773  3180   	fcall	_flash_spiRW
  1386                           
  1387                           ;main.c: 275: while (unread > 12 && byte_address < 4090) {
  1388  0085  2984               	goto	l1591
  1389  0086                     l1543:	
  1390                           ;main.c: 277: while(pattern != 0x00) {
  1391                           
  1392                           
  1393                           ;main.c: 278: gyro_spiRW(0xBC, payload, 1);
  1394  0086  30A0               	movlw	(low (_payload| 0))& (0+255)
  1395  0087  0020               	movlb	0	; select bank0
  1396  0088  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1397  0089  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1398  008A  00F1               	movwf	gyro_spiRW@data
  1399  008B  3001               	movlw	1
  1400  008C  00F2               	movwf	gyro_spiRW@dataLength
  1401  008D  3000               	movlw	0
  1402  008E  00F3               	movwf	gyro_spiRW@dataLength+1
  1403  008F  30BC               	movlw	188
  1404  0090  318F  27A1  3180   	fcall	_gyro_spiRW
  1405                           
  1406                           ;main.c: 279: pattern = payload[0];
  1407  0093  0021               	movlb	1	; select bank1
  1408  0094  0820               	movf	_payload^(0+128),w
  1409  0095  0020               	movlb	0	; select bank0
  1410  0096  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1411  0097  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1412  0098  00C2               	movwf	dump_gyro_fifo_to_flash@pattern
  1413                           
  1414                           ;main.c: 280: if (pattern != 0x00){
  1415  0099  0842               	movf	dump_gyro_fifo_to_flash@pattern,w
  1416  009A  1903               	btfsc	3,2
  1417  009B  28A8               	goto	l1551
  1418                           
  1419                           ;main.c: 281: gyro_spiRW(0xBE, payload, 2);
  1420  009C  30A0               	movlw	(low (_payload| 0))& (0+255)
  1421  009D  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1422  009E  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1423  009F  00F1               	movwf	gyro_spiRW@data
  1424  00A0  3002               	movlw	2
  1425  00A1  00F2               	movwf	gyro_spiRW@dataLength
  1426  00A2  3000               	movlw	0
  1427  00A3  00F3               	movwf	gyro_spiRW@dataLength+1
  1428  00A4  30BE               	movlw	190
  1429  00A5  318F  27A1  3180   	fcall	_gyro_spiRW
  1430  00A8                     l1551:	
  1431  00A8  0020               	movlb	0	; select bank0
  1432  00A9  0842               	movf	dump_gyro_fifo_to_flash@pattern,w
  1433  00AA  1D03               	btfss	3,2
  1434  00AB  2886               	goto	l1543
  1435                           
  1436                           ;main.c: 282: }
  1437                           ;main.c: 283: }
  1438                           ;main.c: 285: gyro_spiRW(0xBE, payload, 2);
  1439  00AC  30A0               	movlw	(low (_payload| 0))& (0+255)
  1440  00AD  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1441  00AE  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1442  00AF  00F1               	movwf	gyro_spiRW@data
  1443  00B0  3002               	movlw	2
  1444  00B1  00F2               	movwf	gyro_spiRW@dataLength
  1445  00B2  3000               	movlw	0
  1446  00B3  00F3               	movwf	gyro_spiRW@dataLength+1
  1447  00B4  30BE               	movlw	190
  1448  00B5  318F  27A1  3180   	fcall	_gyro_spiRW
  1449                           
  1450                           ;main.c: 286: payload[2] = payload[1];
  1451  00B8  0021               	movlb	1	; select bank1
  1452  00B9  0821               	movf	(_payload^(0+128)+1),w
  1453  00BA  0020               	movlb	0	; select bank0
  1454  00BB  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1455  00BC  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1456  00BD  0021               	movlb	1	; select bank1
  1457  00BE  00A2               	movwf	(_payload^(0+128)+2)
  1458                           
  1459                           ;main.c: 287: payload[3] = payload[0];
  1460  00BF  0820               	movf	_payload^(0+128),w
  1461  00C0  0020               	movlb	0	; select bank0
  1462  00C1  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1463  00C2  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1464  00C3  0021               	movlb	1	; select bank1
  1465  00C4  00A3               	movwf	(_payload^(0+128)+3)
  1466                           
  1467                           ;main.c: 288: gyro_spiRW(0xBE, payload, 2);
  1468  00C5  30A0               	movlw	(low (_payload| 0))& (0+255)
  1469  00C6  0020               	movlb	0	; select bank0
  1470  00C7  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1471  00C8  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1472  00C9  00F1               	movwf	gyro_spiRW@data
  1473  00CA  3002               	movlw	2
  1474  00CB  00F2               	movwf	gyro_spiRW@dataLength
  1475  00CC  3000               	movlw	0
  1476  00CD  00F3               	movwf	gyro_spiRW@dataLength+1
  1477  00CE  30BE               	movlw	190
  1478  00CF  318F  27A1  3180   	fcall	_gyro_spiRW
  1479                           
  1480                           ;main.c: 289: payload[4] = payload[1];
  1481  00D2  0021               	movlb	1	; select bank1
  1482  00D3  0821               	movf	(_payload^(0+128)+1),w
  1483  00D4  0020               	movlb	0	; select bank0
  1484  00D5  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1485  00D6  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1486  00D7  0021               	movlb	1	; select bank1
  1487  00D8  00A4               	movwf	(_payload^(0+128)+4)
  1488                           
  1489                           ;main.c: 290: payload[5] = payload[0];
  1490  00D9  0820               	movf	_payload^(0+128),w
  1491  00DA  0020               	movlb	0	; select bank0
  1492  00DB  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1493  00DC  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1494  00DD  0021               	movlb	1	; select bank1
  1495  00DE  00A5               	movwf	(_payload^(0+128)+5)
  1496                           
  1497                           ;main.c: 291: gyro_spiRW(0xBE, payload, 2);
  1498  00DF  30A0               	movlw	(low (_payload| 0))& (0+255)
  1499  00E0  0020               	movlb	0	; select bank0
  1500  00E1  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1501  00E2  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1502  00E3  00F1               	movwf	gyro_spiRW@data
  1503  00E4  3002               	movlw	2
  1504  00E5  00F2               	movwf	gyro_spiRW@dataLength
  1505  00E6  3000               	movlw	0
  1506  00E7  00F3               	movwf	gyro_spiRW@dataLength+1
  1507  00E8  30BE               	movlw	190
  1508  00E9  318F  27A1  3180   	fcall	_gyro_spiRW
  1509                           
  1510                           ;main.c: 292: payload[6] = payload[1];
  1511  00EC  0021               	movlb	1	; select bank1
  1512  00ED  0821               	movf	(_payload^(0+128)+1),w
  1513  00EE  0020               	movlb	0	; select bank0
  1514  00EF  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1515  00F0  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1516  00F1  0021               	movlb	1	; select bank1
  1517  00F2  00A6               	movwf	(_payload^(0+128)+6)
  1518                           
  1519                           ;main.c: 293: payload[7] = payload[0];
  1520  00F3  0820               	movf	_payload^(0+128),w
  1521  00F4  0020               	movlb	0	; select bank0
  1522  00F5  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1523  00F6  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1524  00F7  0021               	movlb	1	; select bank1
  1525  00F8  00A7               	movwf	(_payload^(0+128)+7)
  1526                           
  1527                           ;main.c: 294: gyro_spiRW(0xBE, payload, 2);
  1528  00F9  30A0               	movlw	(low (_payload| 0))& (0+255)
  1529  00FA  0020               	movlb	0	; select bank0
  1530  00FB  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1531  00FC  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1532  00FD  00F1               	movwf	gyro_spiRW@data
  1533  00FE  3002               	movlw	2
  1534  00FF  00F2               	movwf	gyro_spiRW@dataLength
  1535  0100  3000               	movlw	0
  1536  0101  00F3               	movwf	gyro_spiRW@dataLength+1
  1537  0102  30BE               	movlw	190
  1538  0103  318F  27A1  3180   	fcall	_gyro_spiRW
  1539                           
  1540                           ;main.c: 295: payload[8] = payload[1];
  1541  0106  0021               	movlb	1	; select bank1
  1542  0107  0821               	movf	(_payload^(0+128)+1),w
  1543  0108  0020               	movlb	0	; select bank0
  1544  0109  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1545  010A  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1546  010B  0021               	movlb	1	; select bank1
  1547  010C  00A8               	movwf	(_payload^(0+128)+8)
  1548                           
  1549                           ;main.c: 296: payload[9] = payload[0];
  1550  010D  0820               	movf	_payload^(0+128),w
  1551  010E  0020               	movlb	0	; select bank0
  1552  010F  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1553  0110  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1554  0111  0021               	movlb	1	; select bank1
  1555  0112  00A9               	movwf	(_payload^(0+128)+9)
  1556                           
  1557                           ;main.c: 297: gyro_spiRW(0xBE, payload, 2);
  1558  0113  30A0               	movlw	(low (_payload| 0))& (0+255)
  1559  0114  0020               	movlb	0	; select bank0
  1560  0115  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1561  0116  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1562  0117  00F1               	movwf	gyro_spiRW@data
  1563  0118  3002               	movlw	2
  1564  0119  00F2               	movwf	gyro_spiRW@dataLength
  1565  011A  3000               	movlw	0
  1566  011B  00F3               	movwf	gyro_spiRW@dataLength+1
  1567  011C  30BE               	movlw	190
  1568  011D  318F  27A1  3180   	fcall	_gyro_spiRW
  1569                           
  1570                           ;main.c: 298: payload[10] = payload[1];
  1571  0120  0021               	movlb	1	; select bank1
  1572  0121  0821               	movf	(_payload^(0+128)+1),w
  1573  0122  0020               	movlb	0	; select bank0
  1574  0123  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1575  0124  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1576  0125  0021               	movlb	1	; select bank1
  1577  0126  00AA               	movwf	(_payload^(0+128)+10)
  1578                           
  1579                           ;main.c: 299: payload[11] = payload[0];
  1580  0127  0820               	movf	_payload^(0+128),w
  1581  0128  0020               	movlb	0	; select bank0
  1582  0129  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1583  012A  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1584  012B  0021               	movlb	1	; select bank1
  1585  012C  00AB               	movwf	(_payload^(0+128)+11)
  1586                           
  1587                           ;main.c: 300: gyro_spiRW(0xBE, payload, 2);
  1588  012D  30A0               	movlw	(low (_payload| 0))& (0+255)
  1589  012E  0020               	movlb	0	; select bank0
  1590  012F  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1591  0130  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1592  0131  00F1               	movwf	gyro_spiRW@data
  1593  0132  3002               	movlw	2
  1594  0133  00F2               	movwf	gyro_spiRW@dataLength
  1595  0134  3000               	movlw	0
  1596  0135  00F3               	movwf	gyro_spiRW@dataLength+1
  1597  0136  30BE               	movlw	190
  1598  0137  318F  27A1  3180   	fcall	_gyro_spiRW
  1599                           
  1600                           ;main.c: 301: payload[12] = payload[1];
  1601  013A  0021               	movlb	1	; select bank1
  1602  013B  0821               	movf	(_payload^(0+128)+1),w
  1603  013C  0020               	movlb	0	; select bank0
  1604  013D  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1605  013E  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1606  013F  0021               	movlb	1	; select bank1
  1607  0140  00AC               	movwf	(_payload^(0+128)+12)
  1608                           
  1609                           ;main.c: 302: payload[13] = payload[0];
  1610  0141  0820               	movf	_payload^(0+128),w
  1611  0142  0020               	movlb	0	; select bank0
  1612  0143  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1613  0144  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1614  0145  0021               	movlb	1	; select bank1
  1615  0146  00AD               	movwf	(_payload^(0+128)+13)
  1616                           
  1617                           ;main.c: 304: payload[0] = (byte_address & 0xFF00) >> 8;
  1618  0147  0020               	movlb	0	; select bank0
  1619  0148  0844               	movf	dump_gyro_fifo_to_flash@byte_address+1,w
  1620  0149  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1621  014A  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1622  014B  0021               	movlb	1	; select bank1
  1623  014C  00A0               	movwf	_payload^(0+128)
  1624                           
  1625                           ;main.c: 305: payload[1] = (byte_address & 0x00FF);
  1626  014D  0020               	movlb	0	; select bank0
  1627  014E  0843               	movf	dump_gyro_fifo_to_flash@byte_address,w
  1628  014F  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1629  0150  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1630  0151  0021               	movlb	1	; select bank1
  1631  0152  00A1               	movwf	(_payload^(0+128)+1)
  1632                           
  1633                           ;main.c: 306: flash_spiRW(0x84, payload, 14);
  1634  0153  30A0               	movlw	(low (_payload| 0))& (0+255)
  1635  0154  0020               	movlb	0	; select bank0
  1636  0155  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1637  0156  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1638  0157  00F1               	movwf	flash_spiRW@data
  1639  0158  300E               	movlw	14
  1640  0159  00F2               	movwf	flash_spiRW@dataLength
  1641  015A  3000               	movlw	0
  1642  015B  00F3               	movwf	flash_spiRW@dataLength+1
  1643  015C  3084               	movlw	132
  1644  015D  318F  2773  3180   	fcall	_flash_spiRW
  1645                           
  1646                           ;main.c: 308: gyro_spiRW(0xBA, payload, 2);
  1647  0160  30A0               	movlw	(low (_payload| 0))& (0+255)
  1648  0161  0020               	movlb	0	; select bank0
  1649  0162  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1650  0163  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1651  0164  00F1               	movwf	gyro_spiRW@data
  1652  0165  3002               	movlw	2
  1653  0166  00F2               	movwf	gyro_spiRW@dataLength
  1654  0167  3000               	movlw	0
  1655  0168  00F3               	movwf	gyro_spiRW@dataLength+1
  1656  0169  30BA               	movlw	186
  1657  016A  318F  27A1  3180   	fcall	_gyro_spiRW
  1658                           
  1659                           ;main.c: 309: unread = (payload[1] << 8) + payload[0];
  1660  016D  0021               	movlb	1	; select bank1
  1661  016E  0820               	movf	_payload^(0+128),w
  1662  016F  0020               	movlb	0	; select bank0
  1663  0170  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1664  0171  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  1665  0172  0021               	movlb	1	; select bank1
  1666  0173  0821               	movf	(_payload^(0+128)+1),w
  1667  0174  0020               	movlb	0	; select bank0
  1668  0175  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1669  0176  01BD               	clrf	??_dump_gyro_fifo_to_flash+3
  1670  0177  083C               	movf	??_dump_gyro_fifo_to_flash+2,w
  1671  0178  00BD               	movwf	??_dump_gyro_fifo_to_flash+3
  1672  0179  01BC               	clrf	??_dump_gyro_fifo_to_flash+2
  1673  017A  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1674  017B  073C               	addwf	??_dump_gyro_fifo_to_flash+2,w
  1675  017C  00C0               	movwf	dump_gyro_fifo_to_flash@unread
  1676  017D  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  1677  017E  3D3D               	addwfc	??_dump_gyro_fifo_to_flash+3,w
  1678  017F  00C1               	movwf	dump_gyro_fifo_to_flash@unread+1
  1679                           
  1680                           ;main.c: 311: byte_address += 12;
  1681  0180  300C               	movlw	12
  1682  0181  07C3               	addwf	dump_gyro_fifo_to_flash@byte_address,f
  1683  0182  3000               	movlw	0
  1684  0183  3DC4               	addwfc	dump_gyro_fifo_to_flash@byte_address+1,f
  1685  0184                     l1591:	
  1686  0184  3000               	movlw	0
  1687  0185  0020               	movlb	0	; select bank0
  1688  0186  0241               	subwf	dump_gyro_fifo_to_flash@unread+1,w
  1689  0187  300D               	movlw	13
  1690  0188  1903               	skipnz
  1691  0189  0240               	subwf	dump_gyro_fifo_to_flash@unread,w
  1692  018A  1C03               	skipc
  1693  018B  2993               	goto	l1595
  1694  018C  300F               	movlw	15
  1695  018D  0244               	subwf	dump_gyro_fifo_to_flash@byte_address+1,w
  1696  018E  30FA               	movlw	250
  1697  018F  1903               	skipnz
  1698  0190  0243               	subwf	dump_gyro_fifo_to_flash@byte_address,w
  1699  0191  1C03               	skipc
  1700  0192  28A8               	goto	l1551
  1701  0193                     l1595:	
  1702                           
  1703                           ;main.c: 312: }
  1704                           ;main.c: 315: payload[2] = (byte_address & 0xFF00) >> 8;
  1705  0193  0844               	movf	dump_gyro_fifo_to_flash@byte_address+1,w
  1706  0194  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1707  0195  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1708  0196  0021               	movlb	1	; select bank1
  1709  0197  00A2               	movwf	(_payload^(0+128)+2)
  1710                           
  1711                           ;main.c: 316: payload[3] = (byte_address & 0x00FF);
  1712  0198  0020               	movlb	0	; select bank0
  1713  0199  0843               	movf	dump_gyro_fifo_to_flash@byte_address,w
  1714  019A  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1715  019B  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1716  019C  0021               	movlb	1	; select bank1
  1717  019D  00A3               	movwf	(_payload^(0+128)+3)
  1718                           
  1719                           ;main.c: 317: payload[0] = (4096 & 0xFF00) >> 8;
  1720  019E  3010               	movlw	16
  1721  019F  0020               	movlb	0	; select bank0
  1722  01A0  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1723  01A1  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1724  01A2  0021               	movlb	1	; select bank1
  1725  01A3  00A0               	movwf	_payload^(0+128)
  1726                           
  1727                           ;main.c: 318: payload[1] = (4096 & 0x00FF);
  1728  01A4  01A1               	clrf	(_payload^(0+128)+1)
  1729                           
  1730                           ;main.c: 319: flash_spiRW(0x84, payload, 4);
  1731  01A5  30A0               	movlw	(low (_payload| 0))& (0+255)
  1732  01A6  0020               	movlb	0	; select bank0
  1733  01A7  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1734  01A8  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1735  01A9  00F1               	movwf	flash_spiRW@data
  1736  01AA  3004               	movlw	4
  1737  01AB  00F2               	movwf	flash_spiRW@dataLength
  1738  01AC  3000               	movlw	0
  1739  01AD  00F3               	movwf	flash_spiRW@dataLength+1
  1740  01AE  3084               	movlw	132
  1741  01AF  318F  2773  3180   	fcall	_flash_spiRW
  1742                           
  1743                           ;main.c: 320: printf("Bytes written: %u, ", byte_address);
  1744  01B2  30B3               	movlw	low (STR_3| (0+32768))
  1745  01B3  0020               	movlb	0	; select bank0
  1746  01B4  00A2               	movwf	printf@f
  1747  01B5  3085               	movlw	high (STR_3| (0+32768))
  1748  01B6  00A3               	movwf	printf@f+1
  1749  01B7  0844               	movf	dump_gyro_fifo_to_flash@byte_address+1,w
  1750  01B8  00A5               	movwf	?_printf+3
  1751  01B9  0843               	movf	dump_gyro_fifo_to_flash@byte_address,w
  1752  01BA  00A4               	movwf	?_printf+2
  1753  01BB  3182  22EC  3180   	fcall	_printf
  1754                           
  1755                           ;main.c: 323: gyro_spiRW(0xC0, payload, 3);
  1756  01BE  30A0               	movlw	(low (_payload| 0))& (0+255)
  1757  01BF  0020               	movlb	0	; select bank0
  1758  01C0  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1759  01C1  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1760  01C2  00F1               	movwf	gyro_spiRW@data
  1761  01C3  3003               	movlw	3
  1762  01C4  00F2               	movwf	gyro_spiRW@dataLength
  1763  01C5  3000               	movlw	0
  1764  01C6  00F3               	movwf	gyro_spiRW@dataLength+1
  1765  01C7  30C0               	movlw	192
  1766  01C8  318F  27A1  3180   	fcall	_gyro_spiRW
  1767                           
  1768                           ;main.c: 324: printf("TimeStamp: %2X %2X %2X, ", payload[2], payload[1], payload[0]);
  1769  01CB  306C               	movlw	low (STR_4| (0+32768))
  1770  01CC  0020               	movlb	0	; select bank0
  1771  01CD  00A2               	movwf	printf@f
  1772  01CE  3085               	movlw	high (STR_4| (0+32768))
  1773  01CF  00A3               	movwf	printf@f+1
  1774  01D0  0021               	movlb	1	; select bank1
  1775  01D1  0822               	movf	(_payload^(0+128)+2),w
  1776  01D2  0020               	movlb	0	; select bank0
  1777  01D3  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1778  01D4  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  1779  01D5  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1780  01D6  00A4               	movwf	?_printf+2
  1781  01D7  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  1782  01D8  00A5               	movwf	?_printf+3
  1783  01D9  0021               	movlb	1	; select bank1
  1784  01DA  0821               	movf	(_payload^(0+128)+1),w
  1785  01DB  0020               	movlb	0	; select bank0
  1786  01DC  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1787  01DD  01BD               	clrf	??_dump_gyro_fifo_to_flash+3
  1788  01DE  083C               	movf	??_dump_gyro_fifo_to_flash+2,w
  1789  01DF  00A6               	movwf	?_printf+4
  1790  01E0  083D               	movf	??_dump_gyro_fifo_to_flash+3,w
  1791  01E1  00A7               	movwf	?_printf+5
  1792  01E2  0021               	movlb	1	; select bank1
  1793  01E3  0820               	movf	_payload^(0+128),w
  1794  01E4  0020               	movlb	0	; select bank0
  1795  01E5  00BE               	movwf	??_dump_gyro_fifo_to_flash+4
  1796  01E6  01BF               	clrf	??_dump_gyro_fifo_to_flash+5
  1797  01E7  083E               	movf	??_dump_gyro_fifo_to_flash+4,w
  1798  01E8  00A8               	movwf	?_printf+6
  1799  01E9  083F               	movf	??_dump_gyro_fifo_to_flash+5,w
  1800  01EA  00A9               	movwf	?_printf+7
  1801  01EB  3182  22EC  3180   	fcall	_printf
  1802                           
  1803                           ;main.c: 326: payload[4] = payload[0];
  1804  01EE  0021               	movlb	1	; select bank1
  1805  01EF  0820               	movf	_payload^(0+128),w
  1806  01F0  0020               	movlb	0	; select bank0
  1807  01F1  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1808  01F2  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1809  01F3  0021               	movlb	1	; select bank1
  1810  01F4  00A4               	movwf	(_payload^(0+128)+4)
  1811                           
  1812                           ;main.c: 327: payload[3] = payload[1];
  1813  01F5  0821               	movf	(_payload^(0+128)+1),w
  1814  01F6  0020               	movlb	0	; select bank0
  1815  01F7  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1816  01F8  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1817  01F9  0021               	movlb	1	; select bank1
  1818  01FA  00A3               	movwf	(_payload^(0+128)+3)
  1819                           
  1820                           ;main.c: 329: payload[0] = (4098 & 0xFF00) >> 8;
  1821  01FB  3010               	movlw	16
  1822  01FC  0020               	movlb	0	; select bank0
  1823  01FD  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1824  01FE  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1825  01FF  0021               	movlb	1	; select bank1
  1826  0200  00A0               	movwf	_payload^(0+128)
  1827                           
  1828                           ;main.c: 330: payload[1] = (4098 & 0x00FF);
  1829  0201  3002               	movlw	2
  1830  0202  0020               	movlb	0	; select bank0
  1831  0203  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1832  0204  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1833  0205  0021               	movlb	1	; select bank1
  1834  0206  00A1               	movwf	(_payload^(0+128)+1)
  1835                           
  1836                           ;main.c: 331: flash_spiRW(0x84, payload, 5);
  1837  0207  30A0               	movlw	(low (_payload| 0))& (0+255)
  1838  0208  0020               	movlb	0	; select bank0
  1839  0209  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1840  020A  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1841  020B  00F1               	movwf	flash_spiRW@data
  1842  020C  3005               	movlw	5
  1843  020D  00F2               	movwf	flash_spiRW@dataLength
  1844  020E  3000               	movlw	0
  1845  020F  00F3               	movwf	flash_spiRW@dataLength+1
  1846  0210  3084               	movlw	132
  1847  0211  318F  2773  3180   	fcall	_flash_spiRW
  1848                           
  1849                           ;main.c: 334: gyro_spiRW(0xA0, payload, 2);
  1850  0214  30A0               	movlw	(low (_payload| 0))& (0+255)
  1851  0215  0020               	movlb	0	; select bank0
  1852  0216  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1853  0217  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1854  0218  00F1               	movwf	gyro_spiRW@data
  1855  0219  3002               	movlw	2
  1856  021A  00F2               	movwf	gyro_spiRW@dataLength
  1857  021B  3000               	movlw	0
  1858  021C  00F3               	movwf	gyro_spiRW@dataLength+1
  1859  021D  30A0               	movlw	160
  1860  021E  318F  27A1  3180   	fcall	_gyro_spiRW
  1861                           
  1862                           ;main.c: 335: printf("Temperature: %2X %2X, ", payload[1], payload[0]);
  1863  0221  3085               	movlw	low (STR_5| (0+32768))
  1864  0222  0020               	movlb	0	; select bank0
  1865  0223  00A2               	movwf	printf@f
  1866  0224  3085               	movlw	high (STR_5| (0+32768))
  1867  0225  00A3               	movwf	printf@f+1
  1868  0226  0021               	movlb	1	; select bank1
  1869  0227  0821               	movf	(_payload^(0+128)+1),w
  1870  0228  0020               	movlb	0	; select bank0
  1871  0229  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1872  022A  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  1873  022B  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1874  022C  00A4               	movwf	?_printf+2
  1875  022D  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  1876  022E  00A5               	movwf	?_printf+3
  1877  022F  0021               	movlb	1	; select bank1
  1878  0230  0820               	movf	_payload^(0+128),w
  1879  0231  0020               	movlb	0	; select bank0
  1880  0232  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1881  0233  01BD               	clrf	??_dump_gyro_fifo_to_flash+3
  1882  0234  083C               	movf	??_dump_gyro_fifo_to_flash+2,w
  1883  0235  00A6               	movwf	?_printf+4
  1884  0236  083D               	movf	??_dump_gyro_fifo_to_flash+3,w
  1885  0237  00A7               	movwf	?_printf+5
  1886  0238  3182  22EC  3180   	fcall	_printf
  1887                           
  1888                           ;main.c: 337: payload[3] = payload[0];
  1889  023B  0021               	movlb	1	; select bank1
  1890  023C  0820               	movf	_payload^(0+128),w
  1891  023D  0020               	movlb	0	; select bank0
  1892  023E  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1893  023F  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1894  0240  0021               	movlb	1	; select bank1
  1895  0241  00A3               	movwf	(_payload^(0+128)+3)
  1896                           
  1897                           ;main.c: 338: payload[2] = payload[1];
  1898  0242  0821               	movf	(_payload^(0+128)+1),w
  1899  0243  0020               	movlb	0	; select bank0
  1900  0244  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1901  0245  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1902  0246  0021               	movlb	1	; select bank1
  1903  0247  00A2               	movwf	(_payload^(0+128)+2)
  1904                           
  1905                           ;main.c: 339: payload[0] = (4101 & 0xFF00) >> 8;
  1906  0248  3010               	movlw	16
  1907  0249  0020               	movlb	0	; select bank0
  1908  024A  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1909  024B  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1910  024C  0021               	movlb	1	; select bank1
  1911  024D  00A0               	movwf	_payload^(0+128)
  1912                           
  1913                           ;main.c: 340: payload[1] = (4101 & 0x00FF);
  1914  024E  3005               	movlw	5
  1915  024F  0020               	movlb	0	; select bank0
  1916  0250  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1917  0251  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1918  0252  0021               	movlb	1	; select bank1
  1919  0253  00A1               	movwf	(_payload^(0+128)+1)
  1920                           
  1921                           ;main.c: 341: flash_spiRW(0x84, payload, 4);
  1922  0254  30A0               	movlw	(low (_payload| 0))& (0+255)
  1923  0255  0020               	movlb	0	; select bank0
  1924  0256  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1925  0257  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1926  0258  00F1               	movwf	flash_spiRW@data
  1927  0259  3004               	movlw	4
  1928  025A  00F2               	movwf	flash_spiRW@dataLength
  1929  025B  3000               	movlw	0
  1930  025C  00F3               	movwf	flash_spiRW@dataLength+1
  1931  025D  3084               	movlw	132
  1932  025E  318F  2773  3180   	fcall	_flash_spiRW
  1933                           
  1934                           ;main.c: 344: payload[0] = (page_address & 0xFF0000) >> 16;
  1935  0261  0020               	movlb	0	; select bank0
  1936  0262  0837               	movf	dump_gyro_fifo_to_flash@page_address,w
  1937  0263  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1938  0264  0838               	movf	dump_gyro_fifo_to_flash@page_address+1,w
  1939  0265  00BB               	movwf	??_dump_gyro_fifo_to_flash+1
  1940  0266  0839               	movf	dump_gyro_fifo_to_flash@page_address+2,w
  1941  0267  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1942  0268  3010               	movlw	16
  1943  0269                     u1245:	
  1944  0269  36BC               	lsrf	??_dump_gyro_fifo_to_flash+2,f
  1945  026A  0CBB               	rrf	??_dump_gyro_fifo_to_flash+1,f
  1946  026B  0CBA               	rrf	??_dump_gyro_fifo_to_flash,f
  1947  026C  0B89               	decfsz	9,f
  1948  026D  2A69               	goto	u1245
  1949  026E  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1950  026F  00BD               	movwf	??_dump_gyro_fifo_to_flash+3
  1951  0270  083D               	movf	??_dump_gyro_fifo_to_flash+3,w
  1952  0271  0021               	movlb	1	; select bank1
  1953  0272  00A0               	movwf	_payload^(0+128)
  1954                           
  1955                           ;main.c: 345: payload[1] = (page_address & 0x00FF00) >> 8;
  1956  0273  0020               	movlb	0	; select bank0
  1957  0274  0837               	movf	dump_gyro_fifo_to_flash@page_address,w
  1958  0275  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1959  0276  0838               	movf	dump_gyro_fifo_to_flash@page_address+1,w
  1960  0277  00BB               	movwf	??_dump_gyro_fifo_to_flash+1
  1961  0278  0839               	movf	dump_gyro_fifo_to_flash@page_address+2,w
  1962  0279  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  1963  027A  3008               	movlw	8
  1964  027B                     u1255:	
  1965  027B  36BC               	lsrf	??_dump_gyro_fifo_to_flash+2,f
  1966  027C  0CBB               	rrf	??_dump_gyro_fifo_to_flash+1,f
  1967  027D  0CBA               	rrf	??_dump_gyro_fifo_to_flash,f
  1968  027E  0B89               	decfsz	9,f
  1969  027F  2A7B               	goto	u1255
  1970  0280  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1971  0281  00BD               	movwf	??_dump_gyro_fifo_to_flash+3
  1972  0282  083D               	movf	??_dump_gyro_fifo_to_flash+3,w
  1973  0283  0021               	movlb	1	; select bank1
  1974  0284  00A1               	movwf	(_payload^(0+128)+1)
  1975                           
  1976                           ;main.c: 346: payload[2] = (page_address & 0x0000FF);
  1977  0285  0020               	movlb	0	; select bank0
  1978  0286  0837               	movf	dump_gyro_fifo_to_flash@page_address,w
  1979  0287  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1980  0288  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1981  0289  0021               	movlb	1	; select bank1
  1982  028A  00A2               	movwf	(_payload^(0+128)+2)
  1983                           
  1984                           ;main.c: 347: printf("Address: %2X %2X %2X, ", payload[0], payload[1], payload[2]);
  1985  028B  309C               	movlw	low (STR_6| (0+32768))
  1986  028C  0020               	movlb	0	; select bank0
  1987  028D  00A2               	movwf	printf@f
  1988  028E  3085               	movlw	high (STR_6| (0+32768))
  1989  028F  00A3               	movwf	printf@f+1
  1990  0290  0021               	movlb	1	; select bank1
  1991  0291  0820               	movf	_payload^(0+128),w
  1992  0292  0020               	movlb	0	; select bank0
  1993  0293  00BA               	movwf	??_dump_gyro_fifo_to_flash
  1994  0294  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  1995  0295  083A               	movf	??_dump_gyro_fifo_to_flash,w
  1996  0296  00A4               	movwf	?_printf+2
  1997  0297  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  1998  0298  00A5               	movwf	?_printf+3
  1999  0299  0021               	movlb	1	; select bank1
  2000  029A  0821               	movf	(_payload^(0+128)+1),w
  2001  029B  0020               	movlb	0	; select bank0
  2002  029C  00BC               	movwf	??_dump_gyro_fifo_to_flash+2
  2003  029D  01BD               	clrf	??_dump_gyro_fifo_to_flash+3
  2004  029E  083C               	movf	??_dump_gyro_fifo_to_flash+2,w
  2005  029F  00A6               	movwf	?_printf+4
  2006  02A0  083D               	movf	??_dump_gyro_fifo_to_flash+3,w
  2007  02A1  00A7               	movwf	?_printf+5
  2008  02A2  0021               	movlb	1	; select bank1
  2009  02A3  0822               	movf	(_payload^(0+128)+2),w
  2010  02A4  0020               	movlb	0	; select bank0
  2011  02A5  00BE               	movwf	??_dump_gyro_fifo_to_flash+4
  2012  02A6  01BF               	clrf	??_dump_gyro_fifo_to_flash+5
  2013  02A7  083E               	movf	??_dump_gyro_fifo_to_flash+4,w
  2014  02A8  00A8               	movwf	?_printf+6
  2015  02A9  083F               	movf	??_dump_gyro_fifo_to_flash+5,w
  2016  02AA  00A9               	movwf	?_printf+7
  2017  02AB  3182  22EC  3180   	fcall	_printf
  2018                           
  2019                           ;main.c: 348: flash_spiRW(0x10, payload, 3);
  2020  02AE  30A0               	movlw	(low (_payload| 0))& (0+255)
  2021  02AF  0020               	movlb	0	; select bank0
  2022  02B0  00BA               	movwf	??_dump_gyro_fifo_to_flash
  2023  02B1  083A               	movf	??_dump_gyro_fifo_to_flash,w
  2024  02B2  00F1               	movwf	flash_spiRW@data
  2025  02B3  3003               	movlw	3
  2026  02B4  00F2               	movwf	flash_spiRW@dataLength
  2027  02B5  3000               	movlw	0
  2028  02B6  00F3               	movwf	flash_spiRW@dataLength+1
  2029  02B7  3010               	movlw	16
  2030  02B8  318F  2773  3180   	fcall	_flash_spiRW
  2031                           
  2032                           ;main.c: 350: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
  2033  02BB  3068               	movlw	104
  2034  02BC  0020               	movlb	0	; select bank0
  2035  02BD  00BB               	movwf	??_dump_gyro_fifo_to_flash+1
  2036  02BE  30E4               	movlw	228
  2037  02BF  00BA               	movwf	??_dump_gyro_fifo_to_flash
  2038  02C0                     u1367:	
  2039  02C0  0BBA               	decfsz	??_dump_gyro_fifo_to_flash,f
  2040  02C1  2AC0               	goto	u1367
  2041  02C2  0BBB               	decfsz	??_dump_gyro_fifo_to_flash+1,f
  2042  02C3  2AC0               	goto	u1367
  2043  02C4  0000               	nop
  2044                           
  2045                           ;main.c: 353: payload[0] = 0xC0;
  2046  02C5  30C0               	movlw	192
  2047  02C6  0020               	movlb	0	; select bank0
  2048  02C7  00BA               	movwf	??_dump_gyro_fifo_to_flash
  2049  02C8  083A               	movf	??_dump_gyro_fifo_to_flash,w
  2050  02C9  0021               	movlb	1	; select bank1
  2051  02CA  00A0               	movwf	_payload^(0+128)
  2052                           
  2053                           ;main.c: 354: payload[1] = 0x00;
  2054  02CB  01A1               	clrf	(_payload^(0+128)+1)
  2055                           
  2056                           ;main.c: 355: flash_spiRW(0x0F, payload, 2);
  2057  02CC  30A0               	movlw	(low (_payload| 0))& (0+255)
  2058  02CD  0020               	movlb	0	; select bank0
  2059  02CE  00BA               	movwf	??_dump_gyro_fifo_to_flash
  2060  02CF  083A               	movf	??_dump_gyro_fifo_to_flash,w
  2061  02D0  00F1               	movwf	flash_spiRW@data
  2062  02D1  3002               	movlw	2
  2063  02D2  00F2               	movwf	flash_spiRW@dataLength
  2064  02D3  3000               	movlw	0
  2065  02D4  00F3               	movwf	flash_spiRW@dataLength+1
  2066  02D5  300F               	movlw	15
  2067  02D6  318F  2773  3180   	fcall	_flash_spiRW
  2068                           
  2069                           ;main.c: 356: printf("Status: %2X\n", payload[1]);
  2070  02D9  30F8               	movlw	low (STR_7| (0+32768))
  2071  02DA  0020               	movlb	0	; select bank0
  2072  02DB  00A2               	movwf	printf@f
  2073  02DC  3085               	movlw	high (STR_7| (0+32768))
  2074  02DD  00A3               	movwf	printf@f+1
  2075  02DE  0021               	movlb	1	; select bank1
  2076  02DF  0821               	movf	(_payload^(0+128)+1),w
  2077  02E0  0020               	movlb	0	; select bank0
  2078  02E1  00BA               	movwf	??_dump_gyro_fifo_to_flash
  2079  02E2  01BB               	clrf	??_dump_gyro_fifo_to_flash+1
  2080  02E3  083A               	movf	??_dump_gyro_fifo_to_flash,w
  2081  02E4  00A4               	movwf	?_printf+2
  2082  02E5  083B               	movf	??_dump_gyro_fifo_to_flash+1,w
  2083  02E6  00A5               	movwf	?_printf+3
  2084  02E7  3182  22EC         	fcall	_printf
  2085                           
  2086                           ;main.c: 358: return payload[1];
  2087  02E9  0021               	movlb	1	; select bank1
  2088  02EA  0821               	movf	(_payload^(0+128)+1),w
  2089  02EB  0008               	return
  2090  02EC                     __end_of_dump_gyro_fifo_to_flash:	
  2091                           
  2092                           	psect	text4
  2093  02EC                     __ptext4:	
  2094 ;; *************** function _printf *****************
  2095 ;; Defined at:
  2096 ;;		line 464 in file "C:\Program Files\Microchip\xc8\v1.38\sources\common\doprnt.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2099 ;;		 -> STR_7(13), STR_6(23), STR_5(23), STR_4(25), 
  2100 ;;		 -> STR_3(20), STR_2(14), STR_1(18), 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  idx             1   14[BANK0 ] unsigned char 
  2103 ;;  tmpval          4    0        struct .
  2104 ;;  width           2   20[BANK0 ] int 
  2105 ;;  val             2   18[BANK0 ] unsigned int 
  2106 ;;  cp              2    0        PTR const unsigned char 
  2107 ;;  len             2    0        unsigned int 
  2108 ;;  c               1   22[BANK0 ] char 
  2109 ;;  prec            1   17[BANK0 ] char 
  2110 ;;  flag            1   16[BANK0 ] unsigned char 
  2111 ;;  ap              1   15[BANK0 ] PTR void [1]
  2112 ;;		 -> ?_printf(2), 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2    2[BANK0 ] int 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;Total ram usage:       21 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		___lwdiv
  2131 ;;		___lwmod
  2132 ;;		___wmul
  2133 ;;		_isdigit
  2134 ;;		_putch
  2135 ;; This function is called by:
  2136 ;;		_flash_block_erase
  2137 ;;		_dump_gyro_fifo_to_flash
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           
  2142                           ;psect for function _printf
  2143  02EC                     _printf:	
  2144                           
  2145                           ;doprnt.c: 466: va_list ap;
  2146                           ;doprnt.c: 499: signed char c;
  2147                           ;doprnt.c: 501: int width;
  2148                           ;doprnt.c: 506: signed char prec;
  2149                           ;doprnt.c: 508: unsigned char flag;
  2150                           ;doprnt.c: 523: union {
  2151                           ;doprnt.c: 524: unsigned long vd;
  2152                           ;doprnt.c: 525: double integ;
  2153                           ;doprnt.c: 526: } tmpval;
  2154                           ;doprnt.c: 528: unsigned int val;
  2155                           ;doprnt.c: 529: unsigned len;
  2156                           ;doprnt.c: 530: const char * cp;
  2157                           ;doprnt.c: 533: *ap = __va_start();
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2161  02EC  3024               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2162  02ED  0020               	movlb	0	; select bank0
  2163  02EE  00AA               	movwf	??_printf
  2164  02EF  082A               	movf	??_printf,w
  2165  02F0  00AF               	movwf	printf@ap
  2166  02F1                     l1457:	
  2167                           ;doprnt.c: 536: while(c = *f++) {
  2168                           
  2169  02F1  0020               	movlb	0	; select bank0
  2170  02F2  0823               	movf	printf@f+1,w
  2171  02F3  00AB               	movwf	??_printf+1
  2172  02F4  0822               	movf	printf@f,w
  2173  02F5  00AA               	movwf	??_printf
  2174  02F6  0AA2               	incf	printf@f,f
  2175  02F7  1903               	skipnz
  2176  02F8  0AA3               	incf	printf@f+1,f
  2177  02F9  082A               	movf	??_printf,w
  2178  02FA  0084               	movwf	4
  2179  02FB  082B               	movf	??_printf+1,w
  2180  02FC  0085               	movwf	5
  2181  02FD  0800               	movf	0,w	;code access
  2182  02FE  00AC               	movwf	??_printf+2
  2183  02FF  082C               	movf	??_printf+2,w
  2184  0300  00B6               	movwf	printf@c
  2185  0301  0836               	movf	printf@c,w
  2186  0302  1903               	btfsc	3,2
  2187  0303  0008               	return
  2188                           
  2189                           ;doprnt.c: 538: if(c != '%')
  2190  0304  3025               	movlw	37
  2191  0305  0636               	xorwf	printf@c,w
  2192  0306  1903               	btfsc	3,2
  2193  0307  2B0D               	goto	l1381
  2194                           
  2195                           ;doprnt.c: 540: {
  2196                           ;doprnt.c: 541: (putch(c) );
  2197  0308  0836               	movf	printf@c,w
  2198  0309  318F  2733  3182   	fcall	_putch
  2199                           
  2200                           ;doprnt.c: 542: continue;
  2201  030C  2AF1               	goto	l1457
  2202  030D                     l1381:	
  2203                           
  2204                           ;doprnt.c: 543: }
  2205                           ;doprnt.c: 546: width = 0;
  2206  030D  0020               	movlb	0	; select bank0
  2207  030E  01B4               	clrf	printf@width
  2208  030F  01B5               	clrf	printf@width+1
  2209                           
  2210                           ;doprnt.c: 548: flag = 0;
  2211  0310  01B0               	clrf	printf@flag
  2212                           
  2213                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2214  0311  0822               	movf	printf@f,w
  2215  0312  0084               	movwf	4
  2216  0313  0823               	movf	printf@f+1,w
  2217  0314  0085               	movwf	5
  2218  0315  0800               	movf	0,w	;code access
  2219  0316  318F  2738  3182   	fcall	_isdigit
  2220  0319  1C03               	btfss	3,0
  2221  031A  2B55               	goto	l1399
  2222                           
  2223                           ;doprnt.c: 598: width = 0;
  2224  031B  0020               	movlb	0	; select bank0
  2225  031C  01B4               	clrf	printf@width
  2226  031D  01B5               	clrf	printf@width+1
  2227  031E                     l1387:	
  2228                           ;doprnt.c: 599: do {
  2229                           
  2230                           
  2231                           ;doprnt.c: 600: width *= 10;
  2232  031E  300A               	movlw	10
  2233  031F  00F1               	movwf	___wmul@multiplier
  2234  0320  3000               	movlw	0
  2235  0321  00F2               	movwf	___wmul@multiplier+1
  2236  0322  0020               	movlb	0	; select bank0
  2237  0323  0835               	movf	printf@width+1,w
  2238  0324  00F4               	movwf	___wmul@multiplicand+1
  2239  0325  0834               	movf	printf@width,w
  2240  0326  00F3               	movwf	___wmul@multiplicand
  2241  0327  3187  27D8  3182   	fcall	___wmul
  2242  032A  0872               	movf	?___wmul+1,w
  2243  032B  0020               	movlb	0	; select bank0
  2244  032C  00B5               	movwf	printf@width+1
  2245  032D  0871               	movf	?___wmul,w
  2246  032E  00B4               	movwf	printf@width
  2247                           
  2248                           ;doprnt.c: 601: width += *f++ - '0';
  2249  032F  0822               	movf	printf@f,w
  2250  0330  0084               	movwf	4
  2251  0331  0823               	movf	printf@f+1,w
  2252  0332  0085               	movwf	5
  2253  0333  0800               	movf	0,w	;code access
  2254  0334  3ED0               	addlw	208
  2255  0335  00AA               	movwf	??_printf
  2256  0336  30FF               	movlw	255
  2257  0337  1803               	skipnc
  2258  0338  3000               	movlw	0
  2259  0339  00AB               	movwf	??_printf+1
  2260  033A  082A               	movf	??_printf,w
  2261  033B  07B4               	addwf	printf@width,f
  2262  033C  082B               	movf	??_printf+1,w
  2263  033D  3DB5               	addwfc	printf@width+1,f
  2264  033E  3001               	movlw	1
  2265  033F  07A2               	addwf	printf@f,f
  2266  0340  3000               	movlw	0
  2267  0341  3DA3               	addwfc	printf@f+1,f
  2268                           
  2269                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2270  0342  0822               	movf	printf@f,w
  2271  0343  0084               	movwf	4
  2272  0344  0823               	movf	printf@f+1,w
  2273  0345  0085               	movwf	5
  2274  0346  0800               	movf	0,w	;code access
  2275  0347  318F  2738  3182   	fcall	_isdigit
  2276  034A  1C03               	btfss	3,0
  2277  034B  2B55               	goto	l1399
  2278  034C  2B1E               	goto	l1387
  2279  034D                     l217:	
  2280                           ;doprnt.c: 712: case 'X':
  2281                           
  2282                           ;doprnt.c: 638: goto alldone;
  2283                           
  2284                           ;doprnt.c: 637: case 0:
  2285                           
  2286                           ;doprnt.c: 608: }
  2287                           ;doprnt.c: 635: switch(c = *f++) {
  2288                           
  2289                           
  2290                           ;doprnt.c: 718: case 'x':
  2291                           ;doprnt.c: 721: flag |= 0x80;
  2292  034D  0020               	movlb	0	; select bank0
  2293  034E  17B0               	bsf	printf@flag,7
  2294                           
  2295                           ;doprnt.c: 723: break;
  2296  034F  2B70               	goto	l1401
  2297  0350                     l1395:	
  2298                           ;doprnt.c: 817: case 'u':
  2299                           
  2300                           ;doprnt.c: 813: continue;
  2301                           
  2302                           ;doprnt.c: 802: default:
  2303                           
  2304                           
  2305                           ;doprnt.c: 818: flag |= 0xC0;
  2306  0350  30C0               	movlw	192
  2307  0351  00AA               	movwf	??_printf
  2308  0352  082A               	movf	??_printf,w
  2309  0353  04B0               	iorwf	printf@flag,f
  2310                           
  2311                           ;doprnt.c: 822: }
  2312                           
  2313                           ;doprnt.c: 819: break;
  2314  0354  2B70               	goto	l1401
  2315  0355                     l1399:	
  2316  0355  0020               	movlb	0	; select bank0
  2317  0356  0823               	movf	printf@f+1,w
  2318  0357  00AB               	movwf	??_printf+1
  2319  0358  0822               	movf	printf@f,w
  2320  0359  00AA               	movwf	??_printf
  2321  035A  0AA2               	incf	printf@f,f
  2322  035B  1903               	skipnz
  2323  035C  0AA3               	incf	printf@f+1,f
  2324  035D  082A               	movf	??_printf,w
  2325  035E  0084               	movwf	4
  2326  035F  082B               	movf	??_printf+1,w
  2327  0360  0085               	movwf	5
  2328  0361  0800               	movf	0,w	;code access
  2329  0362  00B6               	movwf	printf@c
  2330                           
  2331                           ; Switch size 1, requested type "space"
  2332                           ; Number of cases is 4, Range of values is 0 to 120
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte           13     7 (average)
  2336                           ; direct_byte          248     6 (fixed)
  2337                           ; jumptable            260     6 (fixed)
  2338                           ;	Chosen strategy is simple_byte
  2339  0363  3A00               	xorlw	0	; case 0
  2340  0364  1903               	skipnz
  2341  0365  2C62               	goto	l244
  2342  0366  3A58               	xorlw	88	; case 88
  2343  0367  1903               	skipnz
  2344  0368  2B4D               	goto	l217
  2345  0369  3A2D               	xorlw	45	; case 117
  2346  036A  1903               	skipnz
  2347  036B  2B50               	goto	l1395
  2348  036C  3A0D               	xorlw	13	; case 120
  2349  036D  1903               	skipnz
  2350  036E  2B4D               	goto	l217
  2351  036F  2AF1               	goto	l1457
  2352  0370                     l1401:	
  2353                           
  2354                           ;doprnt.c: 1273: {
  2355                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2356  0370  082F               	movf	printf@ap,w
  2357  0371  0086               	movwf	6
  2358  0372  0187               	clrf	7
  2359  0373  3F40               	moviw [0]fsr1
  2360  0374  00B2               	movwf	printf@val
  2361  0375  3F41               	moviw [1]fsr1
  2362  0376  00B3               	movwf	printf@val+1
  2363  0377  3002               	movlw	2
  2364  0378  00AA               	movwf	??_printf
  2365  0379  082A               	movf	??_printf,w
  2366  037A  07AF               	addwf	printf@ap,f
  2367                           
  2368                           ;doprnt.c: 1287: }
  2369                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  2370  037B  2BC0               	goto	l1427
  2371  037C                     l222:	
  2372                           ;doprnt.c: 1302: case 0xC0:
  2373                           
  2374                           
  2375                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2376  037C  01B6               	clrf	printf@c
  2377  037D  0AB6               	incf	printf@c,f
  2378  037E                     L2:	
  2379  037E  3005               	movlw	5
  2380  037F  0636               	xorwf	printf@c,w
  2381  0380  1903               	btfsc	3,2
  2382  0381  2BC9               	goto	l1429
  2383                           
  2384                           ;doprnt.c: 1306: if(val < dpowers[c])
  2385  0382  0836               	movf	printf@c,w
  2386  0383  00AA               	movwf	??_printf
  2387  0384  01AB               	clrf	??_printf+1
  2388  0385  35AA               	lslf	??_printf,f
  2389  0386  0DAB               	rlf	??_printf+1,f
  2390  0387  305A               	movlw	low (_dpowers| (0+32768))
  2391  0388  072A               	addwf	??_printf,w
  2392  0389  0084               	movwf	4
  2393  038A  3085               	movlw	high (_dpowers| (0+32768))
  2394  038B  3D2B               	addwfc	??_printf+1,w
  2395  038C  0085               	movwf	5
  2396  038D  3F00               	moviw [0]fsr0
  2397  038E  00AC               	movwf	??_printf+2
  2398  038F  3F01               	moviw [1]fsr0
  2399  0390  00AD               	movwf	??_printf+3
  2400  0391  082D               	movf	??_printf+3,w
  2401  0392  0233               	subwf	printf@val+1,w
  2402  0393  1D03               	skipz
  2403  0394  2B97               	goto	u985
  2404  0395  082C               	movf	??_printf+2,w
  2405  0396  0232               	subwf	printf@val,w
  2406  0397                     u985:	
  2407  0397  1C03               	btfss	3,0
  2408  0398  2BC9               	goto	l1429
  2409                           
  2410                           ;doprnt.c: 1307: break;
  2411  0399  3001               	movlw	1
  2412  039A  00AA               	movwf	??_printf
  2413  039B  082A               	movf	??_printf,w
  2414  039C  07B6               	addwf	printf@c,f
  2415  039D  2B7E               	goto	L2
  2416  039E                     l227:	
  2417                           ;doprnt.c: 1314: case 0x80:
  2418                           
  2419                           ;doprnt.c: 1309: break;
  2420                           
  2421                           
  2422                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2423  039E  01B6               	clrf	printf@c
  2424  039F  0AB6               	incf	printf@c,f
  2425  03A0                     L3:	
  2426  03A0  3004               	movlw	4
  2427  03A1  0636               	xorwf	printf@c,w
  2428  03A2  1903               	btfsc	3,2
  2429  03A3  2BC9               	goto	l1429
  2430                           
  2431                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2432  03A4  0836               	movf	printf@c,w
  2433  03A5  00AA               	movwf	??_printf
  2434  03A6  01AB               	clrf	??_printf+1
  2435  03A7  35AA               	lslf	??_printf,f
  2436  03A8  0DAB               	rlf	??_printf+1,f
  2437  03A9  3064               	movlw	low (_hexpowers| (0+32768))
  2438  03AA  072A               	addwf	??_printf,w
  2439  03AB  0084               	movwf	4
  2440  03AC  3085               	movlw	high (_hexpowers| (0+32768))
  2441  03AD  3D2B               	addwfc	??_printf+1,w
  2442  03AE  0085               	movwf	5
  2443  03AF  3F00               	moviw [0]fsr0
  2444  03B0  00AC               	movwf	??_printf+2
  2445  03B1  3F01               	moviw [1]fsr0
  2446  03B2  00AD               	movwf	??_printf+3
  2447  03B3  082D               	movf	??_printf+3,w
  2448  03B4  0233               	subwf	printf@val+1,w
  2449  03B5  1D03               	skipz
  2450  03B6  2BB9               	goto	u1015
  2451  03B7  082C               	movf	??_printf+2,w
  2452  03B8  0232               	subwf	printf@val,w
  2453  03B9                     u1015:	
  2454  03B9  1C03               	btfss	3,0
  2455  03BA  2BC9               	goto	l1429
  2456                           
  2457                           ;doprnt.c: 1318: break;
  2458  03BB  3001               	movlw	1
  2459  03BC  00AA               	movwf	??_printf
  2460  03BD  082A               	movf	??_printf,w
  2461  03BE  07B6               	addwf	printf@c,f
  2462  03BF  2BA0               	goto	L3
  2463  03C0                     l1427:	
  2464                           ;doprnt.c: 1336: }
  2465                           
  2466                           ;doprnt.c: 1320: break;
  2467                           
  2468  03C0  0830               	movf	printf@flag,w
  2469  03C1  39C0               	andlw	192
  2470                           
  2471                           ; Switch size 1, requested type "space"
  2472                           ; Number of cases is 2, Range of values is 128 to 192
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte            7     4 (average)
  2476                           ; direct_byte          139     9 (fixed)
  2477                           ; jumptable            263     9 (fixed)
  2478                           ;	Chosen strategy is simple_byte
  2479  03C2  3A80               	xorlw	128	; case 128
  2480  03C3  1903               	skipnz
  2481  03C4  2B9E               	goto	l227
  2482  03C5  3A40               	xorlw	64	; case 192
  2483  03C6  1903               	skipnz
  2484  03C7  2B7C               	goto	l222
  2485  03C8  2BC9               	goto	l1429
  2486  03C9                     l1429:	
  2487                           
  2488                           ;doprnt.c: 1381: if(width > c)
  2489  03C9  0836               	movf	printf@c,w
  2490  03CA  00AA               	movwf	??_printf
  2491  03CB  01AB               	clrf	??_printf+1
  2492  03CC  1BAA               	btfsc	??_printf,7
  2493  03CD  03AB               	decf	??_printf+1,f
  2494  03CE  082B               	movf	??_printf+1,w
  2495  03CF  3A80               	xorlw	128
  2496  03D0  00AC               	movwf	??_printf+2
  2497  03D1  0835               	movf	printf@width+1,w
  2498  03D2  3A80               	xorlw	128
  2499  03D3  022C               	subwf	??_printf+2,w
  2500  03D4  1D03               	skipz
  2501  03D5  2BD8               	goto	u1035
  2502  03D6  0834               	movf	printf@width,w
  2503  03D7  022A               	subwf	??_printf,w
  2504  03D8                     u1035:	
  2505  03D8  1803               	skipnc
  2506  03D9  2BE5               	goto	l1433
  2507                           
  2508                           ;doprnt.c: 1382: width -= c;
  2509  03DA  0020               	movlb	0	; select bank0
  2510  03DB  0836               	movf	printf@c,w
  2511  03DC  00AA               	movwf	??_printf
  2512  03DD  01AB               	clrf	??_printf+1
  2513  03DE  1BAA               	btfsc	??_printf,7
  2514  03DF  03AB               	decf	??_printf+1,f
  2515  03E0  082A               	movf	??_printf,w
  2516  03E1  02B4               	subwf	printf@width,f
  2517  03E2  082B               	movf	??_printf+1,w
  2518  03E3  3BB5               	subwfb	printf@width+1,f
  2519  03E4  2BE8               	goto	l1435
  2520  03E5                     l1433:	
  2521                           
  2522                           ;doprnt.c: 1383: else
  2523                           ;doprnt.c: 1384: width = 0;
  2524  03E5  0020               	movlb	0	; select bank0
  2525  03E6  01B4               	clrf	printf@width
  2526  03E7  01B5               	clrf	printf@width+1
  2527  03E8                     l1435:	
  2528                           
  2529                           ;doprnt.c: 1422: {
  2530                           ;doprnt.c: 1424: if(width
  2531                           ;doprnt.c: 1428: )
  2532  03E8  0834               	movf	printf@width,w
  2533  03E9  0435               	iorwf	printf@width+1,w
  2534  03EA  1903               	btfsc	3,2
  2535  03EB  2BF9               	goto	l1441
  2536  03EC                     l1437:	
  2537                           ;doprnt.c: 1429: do
  2538                           
  2539                           
  2540                           ;doprnt.c: 1430: (putch(' ') );
  2541  03EC  3020               	movlw	32
  2542  03ED  318F  2733  3182   	fcall	_putch
  2543                           
  2544                           ;doprnt.c: 1431: while(--width);
  2545  03F0  30FF               	movlw	255
  2546  03F1  0020               	movlb	0	; select bank0
  2547  03F2  07B4               	addwf	printf@width,f
  2548  03F3  30FF               	movlw	255
  2549  03F4  3DB5               	addwfc	printf@width+1,f
  2550  03F5  0834               	movf	printf@width,w
  2551  03F6  0435               	iorwf	printf@width+1,w
  2552  03F7  1D03               	btfss	3,2
  2553  03F8  2BEC               	goto	l1437
  2554  03F9                     l1441:	
  2555                           
  2556                           ;doprnt.c: 1469: }
  2557                           ;doprnt.c: 1472: prec = c;
  2558  03F9  0836               	movf	printf@c,w
  2559  03FA  00AA               	movwf	??_printf
  2560  03FB  082A               	movf	??_printf,w
  2561  03FC  00B1               	movwf	printf@prec
  2562                           
  2563                           ;doprnt.c: 1474: while(prec--) {
  2564  03FD  2C50               	goto	l1455
  2565  03FE                     l1443:	
  2566                           ;doprnt.c: 1478: {
  2567                           ;doprnt.c: 1486: case 0xC0:
  2568                           
  2569                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  2570                           
  2571                           
  2572                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2573  03FE  300A               	movlw	10
  2574  03FF  00F9               	movwf	___lwmod@divisor
  2575  0400  3000               	movlw	0
  2576  0401  00FA               	movwf	___lwmod@divisor+1
  2577  0402  0831               	movf	printf@prec,w
  2578  0403  00AA               	movwf	??_printf
  2579  0404  01AB               	clrf	??_printf+1
  2580  0405  35AA               	lslf	??_printf,f
  2581  0406  0DAB               	rlf	??_printf+1,f
  2582  0407  305A               	movlw	low (_dpowers| (0+32768))
  2583  0408  072A               	addwf	??_printf,w
  2584  0409  0084               	movwf	4
  2585  040A  3085               	movlw	high (_dpowers| (0+32768))
  2586  040B  3D2B               	addwfc	??_printf+1,w
  2587  040C  0085               	movwf	5
  2588  040D  3F00               	moviw [0]fsr0
  2589  040E  00F1               	movwf	___lwdiv@divisor
  2590  040F  3F01               	moviw [1]fsr0
  2591  0410  00F2               	movwf	___lwdiv@divisor+1
  2592  0411  0833               	movf	printf@val+1,w
  2593  0412  00F4               	movwf	___lwdiv@dividend+1
  2594  0413  0832               	movf	printf@val,w
  2595  0414  00F3               	movwf	___lwdiv@dividend
  2596  0415  3187  27A4  3182   	fcall	___lwdiv
  2597  0418  0872               	movf	?___lwdiv+1,w
  2598  0419  00FC               	movwf	___lwmod@dividend+1
  2599  041A  0871               	movf	?___lwdiv,w
  2600  041B  00FB               	movwf	___lwmod@dividend
  2601  041C  318F  2746  3182   	fcall	___lwmod
  2602  041F  0879               	movf	?___lwmod,w
  2603  0420  3E30               	addlw	48
  2604  0421  0020               	movlb	0	; select bank0
  2605  0422  00AC               	movwf	??_printf+2
  2606  0423  082C               	movf	??_printf+2,w
  2607  0424  2C4B               	goto	L1
  2608  0425                     l1445:	
  2609                           ;doprnt.c: 1497: case 0x80:
  2610                           
  2611                           ;doprnt.c: 1491: break;
  2612                           
  2613                           
  2614                           ;doprnt.c: 1499: {
  2615                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2616  0425  0831               	movf	printf@prec,w
  2617  0426  00AA               	movwf	??_printf
  2618  0427  01AB               	clrf	??_printf+1
  2619  0428  35AA               	lslf	??_printf,f
  2620  0429  0DAB               	rlf	??_printf+1,f
  2621  042A  3064               	movlw	low (_hexpowers| (0+32768))
  2622  042B  072A               	addwf	??_printf,w
  2623  042C  0084               	movwf	4
  2624  042D  3085               	movlw	high (_hexpowers| (0+32768))
  2625  042E  3D2B               	addwfc	??_printf+1,w
  2626  042F  0085               	movwf	5
  2627  0430  3F00               	moviw [0]fsr0
  2628  0431  00F1               	movwf	___lwdiv@divisor
  2629  0432  3F01               	moviw [1]fsr0
  2630  0433  00F2               	movwf	___lwdiv@divisor+1
  2631  0434  0833               	movf	printf@val+1,w
  2632  0435  00F4               	movwf	___lwdiv@dividend+1
  2633  0436  0832               	movf	printf@val,w
  2634  0437  00F3               	movwf	___lwdiv@dividend
  2635  0438  3187  27A4  3182   	fcall	___lwdiv
  2636  043B  0871               	movf	?___lwdiv,w
  2637  043C  390F               	andlw	15
  2638  043D  0020               	movlb	0	; select bank0
  2639  043E  00AC               	movwf	??_printf+2
  2640  043F  082C               	movf	??_printf+2,w
  2641  0440  00AE               	movwf	printf@idx
  2642                           
  2643                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  2644  0441  082E               	movf	printf@idx,w
  2645  0442  3ED9               	addlw	low (STR_8| (0+32768))
  2646  0443  0084               	movwf	4
  2647  0444  3085               	movlw	high (STR_8| (0+32768))
  2648  0445  1803               	skipnc
  2649  0446  3E01               	addlw	1
  2650  0447  0085               	movwf	5
  2651  0448  0800               	movf	0,w	;code access
  2652  0449  00AA               	movwf	??_printf
  2653  044A  082A               	movf	??_printf,w
  2654  044B                     L1:	
  2655  044B  00B6               	movwf	printf@c
  2656  044C                     l1453:	
  2657                           ;doprnt.c: 1523: }
  2658                           
  2659                           ;doprnt.c: 1508: }
  2660                           ;doprnt.c: 1510: break;
  2661                           
  2662                           
  2663                           ;doprnt.c: 1524: (putch(c) );
  2664  044C  0836               	movf	printf@c,w
  2665  044D  318F  2733  3182   	fcall	_putch
  2666  0450                     l1455:	
  2667  0450  30FF               	movlw	255
  2668  0451  0020               	movlb	0	; select bank0
  2669  0452  00AA               	movwf	??_printf
  2670  0453  082A               	movf	??_printf,w
  2671  0454  07B1               	addwf	printf@prec,f
  2672  0455  0A31               	incf	printf@prec,w
  2673  0456  1903               	btfsc	3,2
  2674  0457  2AF1               	goto	l1457
  2675  0458  0830               	movf	printf@flag,w
  2676  0459  39C0               	andlw	192
  2677                           
  2678                           ; Switch size 1, requested type "space"
  2679                           ; Number of cases is 2, Range of values is 128 to 192
  2680                           ; switch strategies available:
  2681                           ; Name         Instructions Cycles
  2682                           ; simple_byte            7     4 (average)
  2683                           ; direct_byte          139     9 (fixed)
  2684                           ; jumptable            263     9 (fixed)
  2685                           ;	Chosen strategy is simple_byte
  2686  045A  3A80               	xorlw	128	; case 128
  2687  045B  1903               	skipnz
  2688  045C  2C25               	goto	l1445
  2689  045D  3A40               	xorlw	64	; case 192
  2690  045E  1903               	skipnz
  2691  045F  2BFE               	goto	l1443
  2692  0460  2C4C               	goto	l1453
  2693  0461  2C4C               	goto	l1453
  2694  0462                     l244:	
  2695                           ;doprnt.c: 1540: return 0;
  2696                           ;	Return value of _printf is never used
  2697                           
  2698                           ;doprnt.c: 1525: }
  2699                           ;doprnt.c: 1533: }
  2700                           ;doprnt.c: 1535: alldone:
  2701                           
  2702  0462  0008               	return
  2703  0463                     __end_of_printf:	
  2704                           
  2705                           	psect	text5
  2706  0F33                     __ptext5:	
  2707 ;; *************** function _putch *****************
  2708 ;; Defined at:
  2709 ;;		line 168 in file "main.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  byte            1    wreg     unsigned char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  byte            1    2[COMMON] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    2
  2730 ;; This function calls:
  2731 ;;		_serialCharOut
  2732 ;; This function is called by:
  2733 ;;		_printf
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function _putch
  2739  0F33                     _putch:	
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2743                           ;putch@byte stored from wreg
  2744  0F33  00F2               	movwf	putch@byte
  2745                           
  2746                           ;main.c: 169: serialCharOut(byte);
  2747  0F34  0872               	movf	putch@byte,w
  2748  0F35  3187  27F3         	fcall	_serialCharOut
  2749  0F37  0008               	return
  2750  0F38                     __end_of_putch:	
  2751                           
  2752                           	psect	text6
  2753  0F38                     __ptext6:	
  2754 ;; *************** function _isdigit *****************
  2755 ;; Defined at:
  2756 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.38\sources\common\isdigit.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  c               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  c               1    2[COMMON] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_printf
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _isdigit
  2786  0F38                     _isdigit:	
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2790                           ;isdigit@c stored from wreg
  2791  0F38  00F2               	movwf	isdigit@c
  2792  0F39  01F1               	clrf	_isdigit$643
  2793  0F3A  303A               	movlw	58
  2794  0F3B  0272               	subwf	isdigit@c,w
  2795  0F3C  1803               	skipnc
  2796  0F3D  2F44               	goto	l1281
  2797  0F3E  3030               	movlw	48
  2798  0F3F  0272               	subwf	isdigit@c,w
  2799  0F40  1C03               	skipc
  2800  0F41  2F44               	goto	l1281
  2801  0F42  01F1               	clrf	_isdigit$643
  2802  0F43  0AF1               	incf	_isdigit$643,f
  2803  0F44                     l1281:	
  2804  0F44  0C71               	rrf	_isdigit$643,w
  2805  0F45  0008               	return
  2806  0F46                     __end_of_isdigit:	
  2807                           
  2808                           	psect	text7
  2809  07D8                     __ptext7:	
  2810 ;; *************** function ___wmul *****************
  2811 ;; Defined at:
  2812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  multiplier      2    1[COMMON] unsigned int 
  2815 ;;  multiplicand    2    3[COMMON] unsigned int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  product         2    5[COMMON] unsigned int 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2    1[COMMON] unsigned int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;Total ram usage:        6 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_printf
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function ___wmul
  2843  07D8                     ___wmul:	
  2844                           
  2845                           ;incstack = 0
  2846                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2847  07D8  01F5               	clrf	___wmul@product
  2848  07D9  01F6               	clrf	___wmul@product+1
  2849  07DA                     l1287:	
  2850  07DA  1C71               	btfss	___wmul@multiplier,0
  2851  07DB  2FE0               	goto	l328
  2852  07DC  0873               	movf	___wmul@multiplicand,w
  2853  07DD  07F5               	addwf	___wmul@product,f
  2854  07DE  0874               	movf	___wmul@multiplicand+1,w
  2855  07DF  3DF6               	addwfc	___wmul@product+1,f
  2856  07E0                     l328:	
  2857  07E0  3001               	movlw	1
  2858  07E1                     u725:	
  2859  07E1  35F3               	lslf	___wmul@multiplicand,f
  2860  07E2  0DF4               	rlf	___wmul@multiplicand+1,f
  2861  07E3  0B89               	decfsz	9,f
  2862  07E4  2FE1               	goto	u725
  2863  07E5  3001               	movlw	1
  2864  07E6                     u735:	
  2865  07E6  36F2               	lsrf	___wmul@multiplier+1,f
  2866  07E7  0CF1               	rrf	___wmul@multiplier,f
  2867  07E8  0B89               	decfsz	9,f
  2868  07E9  2FE6               	goto	u735
  2869  07EA  0871               	movf	___wmul@multiplier,w
  2870  07EB  0472               	iorwf	___wmul@multiplier+1,w
  2871  07EC  1D03               	btfss	3,2
  2872  07ED  2FDA               	goto	l1287
  2873  07EE  0876               	movf	___wmul@product+1,w
  2874  07EF  00F2               	movwf	?___wmul+1
  2875  07F0  0875               	movf	___wmul@product,w
  2876  07F1  00F1               	movwf	?___wmul
  2877  07F2  0008               	return
  2878  07F3                     __end_of___wmul:	
  2879                           
  2880                           	psect	text8
  2881  0F46                     __ptext8:	
  2882 ;; *************** function ___lwmod *****************
  2883 ;; Defined at:
  2884 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.38\sources\common\lwmod.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  divisor         2    9[COMMON] unsigned int 
  2887 ;;  dividend        2   11[COMMON] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  counter         1    1[BANK0 ] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  2    9[COMMON] unsigned int 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;Total ram usage:        6 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_printf
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function ___lwmod
  2915  0F46                     ___lwmod:	
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2919  0F46  0879               	movf	___lwmod@divisor,w
  2920  0F47  047A               	iorwf	___lwmod@divisor+1,w
  2921  0F48  1903               	btfsc	3,2
  2922  0F49  2F6E               	goto	l1343
  2923  0F4A  0020               	movlb	0	; select bank0
  2924  0F4B  01A1               	clrf	___lwmod@counter
  2925  0F4C  0AA1               	incf	___lwmod@counter,f
  2926  0F4D                     l1333:	
  2927  0F4D  1BFA               	btfsc	___lwmod@divisor+1,7
  2928  0F4E  2F59               	goto	l1335
  2929  0F4F  3001               	movlw	1
  2930  0F50                     u835:	
  2931  0F50  35F9               	lslf	___lwmod@divisor,f
  2932  0F51  0DFA               	rlf	___lwmod@divisor+1,f
  2933  0F52  0B89               	decfsz	9,f
  2934  0F53  2F50               	goto	u835
  2935  0F54  3001               	movlw	1
  2936  0F55  00A0               	movwf	??___lwmod
  2937  0F56  0820               	movf	??___lwmod,w
  2938  0F57  07A1               	addwf	___lwmod@counter,f
  2939  0F58  2F4D               	goto	l1333
  2940  0F59                     l1335:	
  2941  0F59  087A               	movf	___lwmod@divisor+1,w
  2942  0F5A  027C               	subwf	___lwmod@dividend+1,w
  2943  0F5B  1D03               	skipz
  2944  0F5C  2F5F               	goto	u855
  2945  0F5D  0879               	movf	___lwmod@divisor,w
  2946  0F5E  027B               	subwf	___lwmod@dividend,w
  2947  0F5F                     u855:	
  2948  0F5F  1C03               	skipc
  2949  0F60  2F65               	goto	l1339
  2950  0F61  0879               	movf	___lwmod@divisor,w
  2951  0F62  02FB               	subwf	___lwmod@dividend,f
  2952  0F63  087A               	movf	___lwmod@divisor+1,w
  2953  0F64  3BFC               	subwfb	___lwmod@dividend+1,f
  2954  0F65                     l1339:	
  2955  0F65  3001               	movlw	1
  2956  0F66                     u865:	
  2957  0F66  36FA               	lsrf	___lwmod@divisor+1,f
  2958  0F67  0CF9               	rrf	___lwmod@divisor,f
  2959  0F68  0B89               	decfsz	9,f
  2960  0F69  2F66               	goto	u865
  2961  0F6A  3001               	movlw	1
  2962  0F6B  02A1               	subwf	___lwmod@counter,f
  2963  0F6C  1D03               	btfss	3,2
  2964  0F6D  2F59               	goto	l1335
  2965  0F6E                     l1343:	
  2966  0F6E  087C               	movf	___lwmod@dividend+1,w
  2967  0F6F  00FA               	movwf	?___lwmod+1
  2968  0F70  087B               	movf	___lwmod@dividend,w
  2969  0F71  00F9               	movwf	?___lwmod
  2970  0F72  0008               	return
  2971  0F73                     __end_of___lwmod:	
  2972                           
  2973                           	psect	text9
  2974  07A4                     __ptext9:	
  2975 ;; *************** function ___lwdiv *****************
  2976 ;; Defined at:
  2977 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  divisor         2    1[COMMON] unsigned int 
  2980 ;;  dividend        2    3[COMMON] unsigned int 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  quotient        2    6[COMMON] unsigned int 
  2983 ;;  counter         1    8[COMMON] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  2    1[COMMON] unsigned int 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;Total ram usage:        8 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_printf
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function ___lwdiv
  3009  07A4                     ___lwdiv:	
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3013  07A4  01F6               	clrf	___lwdiv@quotient
  3014  07A5  01F7               	clrf	___lwdiv@quotient+1
  3015  07A6  0871               	movf	___lwdiv@divisor,w
  3016  07A7  0472               	iorwf	___lwdiv@divisor+1,w
  3017  07A8  1903               	btfsc	3,2
  3018  07A9  2FD3               	goto	l1321
  3019  07AA  01F8               	clrf	___lwdiv@counter
  3020  07AB  0AF8               	incf	___lwdiv@counter,f
  3021  07AC                     l1309:	
  3022  07AC  1BF2               	btfsc	___lwdiv@divisor+1,7
  3023  07AD  2FB8               	goto	l1311
  3024  07AE  3001               	movlw	1
  3025  07AF                     u765:	
  3026  07AF  35F1               	lslf	___lwdiv@divisor,f
  3027  07B0  0DF2               	rlf	___lwdiv@divisor+1,f
  3028  07B1  0B89               	decfsz	9,f
  3029  07B2  2FAF               	goto	u765
  3030  07B3  3001               	movlw	1
  3031  07B4  00F5               	movwf	??___lwdiv
  3032  07B5  0875               	movf	??___lwdiv,w
  3033  07B6  07F8               	addwf	___lwdiv@counter,f
  3034  07B7  2FAC               	goto	l1309
  3035  07B8                     l1311:	
  3036  07B8  3001               	movlw	1
  3037  07B9                     u785:	
  3038  07B9  35F6               	lslf	___lwdiv@quotient,f
  3039  07BA  0DF7               	rlf	___lwdiv@quotient+1,f
  3040  07BB  0B89               	decfsz	9,f
  3041  07BC  2FB9               	goto	u785
  3042  07BD  0872               	movf	___lwdiv@divisor+1,w
  3043  07BE  0274               	subwf	___lwdiv@dividend+1,w
  3044  07BF  1D03               	skipz
  3045  07C0  2FC3               	goto	u795
  3046  07C1  0871               	movf	___lwdiv@divisor,w
  3047  07C2  0273               	subwf	___lwdiv@dividend,w
  3048  07C3                     u795:	
  3049  07C3  1C03               	skipc
  3050  07C4  2FCA               	goto	l1317
  3051  07C5  0871               	movf	___lwdiv@divisor,w
  3052  07C6  02F3               	subwf	___lwdiv@dividend,f
  3053  07C7  0872               	movf	___lwdiv@divisor+1,w
  3054  07C8  3BF4               	subwfb	___lwdiv@dividend+1,f
  3055  07C9  1476               	bsf	___lwdiv@quotient,0
  3056  07CA                     l1317:	
  3057  07CA  3001               	movlw	1
  3058  07CB                     u805:	
  3059  07CB  36F2               	lsrf	___lwdiv@divisor+1,f
  3060  07CC  0CF1               	rrf	___lwdiv@divisor,f
  3061  07CD  0B89               	decfsz	9,f
  3062  07CE  2FCB               	goto	u805
  3063  07CF  3001               	movlw	1
  3064  07D0  02F8               	subwf	___lwdiv@counter,f
  3065  07D1  1D03               	btfss	3,2
  3066  07D2  2FB8               	goto	l1311
  3067  07D3                     l1321:	
  3068  07D3  0877               	movf	___lwdiv@quotient+1,w
  3069  07D4  00F2               	movwf	?___lwdiv+1
  3070  07D5  0876               	movf	___lwdiv@quotient,w
  3071  07D6  00F1               	movwf	?___lwdiv
  3072  07D7  0008               	return
  3073  07D8                     __end_of___lwdiv:	
  3074                           
  3075                           	psect	text10
  3076  0FCF                     __ptext10:	
  3077 ;; *************** function _read_flash *****************
  3078 ;; Defined at:
  3079 ;;		line 361 in file "main.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_flash_read_page
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _read_flash
  3109  0FCF                     _read_flash:	
  3110  0FCF                     l1781:	
  3111                           ;main.c: 362: while (flash_page_address < 0x020000){
  3112                           
  3113                           ;incstack = 0
  3114                           ; Regs used in _read_flash: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3115                           
  3116  0FCF  3002               	movlw	2
  3117  0FD0  0020               	movlb	0	; select bank0
  3118  0FD1  0250               	subwf	_flash_page_address+2,w
  3119  0FD2  1D03               	skipz
  3120  0FD3  2FDA               	goto	u1265
  3121  0FD4  3000               	movlw	0
  3122  0FD5  024F               	subwf	_flash_page_address+1,w
  3123  0FD6  1D03               	skipz
  3124  0FD7  2FDA               	goto	u1265
  3125  0FD8  3000               	movlw	0
  3126  0FD9  024E               	subwf	_flash_page_address,w
  3127  0FDA                     u1265:	
  3128  0FDA  1803               	btfsc	3,0
  3129  0FDB  0008               	return
  3130                           
  3131                           ;main.c: 363: RB6 = 1;
  3132  0FDC  170D               	bsf	13,6	;volatile
  3133                           
  3134                           ;main.c: 364: flash_read_page(flash_page_address);
  3135  0FDD  084E               	movf	_flash_page_address,w
  3136  0FDE  00F9               	movwf	flash_read_page@page_address
  3137  0FDF  084F               	movf	_flash_page_address+1,w
  3138  0FE0  00FA               	movwf	flash_read_page@page_address+1
  3139  0FE1  0850               	movf	_flash_page_address+2,w
  3140  0FE2  00FB               	movwf	flash_read_page@page_address+2
  3141  0FE3  3186  267C  318F   	fcall	_flash_read_page
  3142                           
  3143                           ;main.c: 365: RB6 = 0;
  3144  0FE6  0020               	movlb	0	; select bank0
  3145  0FE7  130D               	bcf	13,6	;volatile
  3146                           
  3147                           ;main.c: 366: flash_page_address++;
  3148  0FE8  3001               	movlw	1
  3149  0FE9  07CE               	addwf	_flash_page_address,f
  3150  0FEA  3000               	movlw	0
  3151  0FEB  1803               	skipnc
  3152  0FEC  3001               	movlw	1
  3153  0FED  07CF               	addwf	_flash_page_address+1,f
  3154  0FEE  3000               	movlw	0
  3155  0FEF  1803               	skipnc
  3156  0FF0  3001               	movlw	1
  3157  0FF1  07D0               	addwf	_flash_page_address+2,f
  3158                           
  3159                           ;main.c: 367: _delay((unsigned long)((200)*((32000000UL)/4000.0)));
  3160  0FF2  3009               	movlw	9
  3161  0FF3  00A8               	movwf	??_read_flash+2
  3162  0FF4  301E               	movlw	30
  3163  0FF5  00A7               	movwf	??_read_flash+1
  3164  0FF6  30EB               	movlw	235
  3165  0FF7  00A6               	movwf	??_read_flash
  3166  0FF8                     u1377:	
  3167  0FF8  0BA6               	decfsz	??_read_flash,f
  3168  0FF9  2FF8               	goto	u1377
  3169  0FFA  0BA7               	decfsz	??_read_flash+1,f
  3170  0FFB  2FF8               	goto	u1377
  3171  0FFC  0BA8               	decfsz	??_read_flash+2,f
  3172  0FFD  2FF8               	goto	u1377
  3173  0FFE  0000               	nop
  3174  0FFF  2FCF               	goto	l1781
  3175  1000                     __end_of_read_flash:	
  3176                           
  3177                           	psect	text11
  3178  067C                     __ptext11:	
  3179 ;; *************** function _flash_read_page *****************
  3180 ;; Defined at:
  3181 ;;		line 207 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  page_address    3    9[COMMON] unsigned um
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  i               2    4[BANK0 ] unsigned int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;Total ram usage:        9 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    2
  3202 ;; This function calls:
  3203 ;;		_flash_spiRW
  3204 ;;		_serialCharOut
  3205 ;; This function is called by:
  3206 ;;		_read_flash
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _flash_read_page
  3212  067C                     _flash_read_page:	
  3213                           
  3214                           ;main.c: 209: payload[0] = (page_address & 0xFF0000) >> 16;
  3215                           
  3216                           ;incstack = 0
  3217                           ; Regs used in _flash_read_page: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3218  067C  0879               	movf	flash_read_page@page_address,w
  3219  067D  0020               	movlb	0	; select bank0
  3220  067E  00A0               	movwf	??_flash_read_page
  3221  067F  087A               	movf	flash_read_page@page_address+1,w
  3222  0680  00A1               	movwf	??_flash_read_page+1
  3223  0681  087B               	movf	flash_read_page@page_address+2,w
  3224  0682  00A2               	movwf	??_flash_read_page+2
  3225  0683  3010               	movlw	16
  3226  0684                     u1085:	
  3227  0684  36A2               	lsrf	??_flash_read_page+2,f
  3228  0685  0CA1               	rrf	??_flash_read_page+1,f
  3229  0686  0CA0               	rrf	??_flash_read_page,f
  3230  0687  0B89               	decfsz	9,f
  3231  0688  2E84               	goto	u1085
  3232  0689  0820               	movf	??_flash_read_page,w
  3233  068A  00A3               	movwf	??_flash_read_page+3
  3234  068B  0823               	movf	??_flash_read_page+3,w
  3235  068C  0021               	movlb	1	; select bank1
  3236  068D  00A0               	movwf	_payload^(0+128)
  3237                           
  3238                           ;main.c: 210: payload[1] = (page_address & 0x00FF00) >> 8;
  3239  068E  0879               	movf	flash_read_page@page_address,w
  3240  068F  0020               	movlb	0	; select bank0
  3241  0690  00A0               	movwf	??_flash_read_page
  3242  0691  087A               	movf	flash_read_page@page_address+1,w
  3243  0692  00A1               	movwf	??_flash_read_page+1
  3244  0693  087B               	movf	flash_read_page@page_address+2,w
  3245  0694  00A2               	movwf	??_flash_read_page+2
  3246  0695  3008               	movlw	8
  3247  0696                     u1095:	
  3248  0696  36A2               	lsrf	??_flash_read_page+2,f
  3249  0697  0CA1               	rrf	??_flash_read_page+1,f
  3250  0698  0CA0               	rrf	??_flash_read_page,f
  3251  0699  0B89               	decfsz	9,f
  3252  069A  2E96               	goto	u1095
  3253  069B  0820               	movf	??_flash_read_page,w
  3254  069C  00A3               	movwf	??_flash_read_page+3
  3255  069D  0823               	movf	??_flash_read_page+3,w
  3256  069E  0021               	movlb	1	; select bank1
  3257  069F  00A1               	movwf	(_payload^(0+128)+1)
  3258                           
  3259                           ;main.c: 211: payload[2] = (page_address & 0x0000FF);
  3260  06A0  0879               	movf	flash_read_page@page_address,w
  3261  06A1  0020               	movlb	0	; select bank0
  3262  06A2  00A0               	movwf	??_flash_read_page
  3263  06A3  0820               	movf	??_flash_read_page,w
  3264  06A4  0021               	movlb	1	; select bank1
  3265  06A5  00A2               	movwf	(_payload^(0+128)+2)
  3266                           
  3267                           ;main.c: 212: flash_spiRW(0x13, payload, 3);
  3268  06A6  30A0               	movlw	(low (_payload| 0))& (0+255)
  3269  06A7  0020               	movlb	0	; select bank0
  3270  06A8  00A0               	movwf	??_flash_read_page
  3271  06A9  0820               	movf	??_flash_read_page,w
  3272  06AA  00F1               	movwf	flash_spiRW@data
  3273  06AB  3003               	movlw	3
  3274  06AC  00F2               	movwf	flash_spiRW@dataLength
  3275  06AD  3000               	movlw	0
  3276  06AE  00F3               	movwf	flash_spiRW@dataLength+1
  3277  06AF  3013               	movlw	19
  3278  06B0  318F  2773  3186   	fcall	_flash_spiRW
  3279                           
  3280                           ;main.c: 214: _delay((unsigned long)((1)*((32000000UL)/4000.0)));
  3281  06B3  300B               	movlw	11
  3282  06B4  0020               	movlb	0	; select bank0
  3283  06B5  00A1               	movwf	??_flash_read_page+1
  3284  06B6  3062               	movlw	98
  3285  06B7  00A0               	movwf	??_flash_read_page
  3286  06B8                     u1387:	
  3287  06B8  0BA0               	decfsz	??_flash_read_page,f
  3288  06B9  2EB8               	goto	u1387
  3289  06BA  0BA1               	decfsz	??_flash_read_page+1,f
  3290  06BB  2EB8               	goto	u1387
  3291  06BC  0000               	nop
  3292                           
  3293                           ;main.c: 216: RA4 = 0;
  3294  06BD  0020               	movlb	0	; select bank0
  3295  06BE  120C               	bcf	12,4	;volatile
  3296                           
  3297                           ;main.c: 217: SSP2BUF = 0x03;
  3298  06BF  3003               	movlw	3
  3299  06C0  0024               	movlb	4	; select bank4
  3300  06C1  0099               	movwf	25	;volatile
  3301  06C2                     l134:	
  3302                           ;main.c: 218: while (SSP2STATbits.BF == 0){;}
  3303                           
  3304  06C2  1C1C               	btfss	28,0	;volatile
  3305  06C3  2EC2               	goto	l134
  3306                           
  3307                           ;main.c: 219: SSP2BUF = 0x00;
  3308  06C4  0199               	clrf	25	;volatile
  3309  06C5                     l137:	
  3310                           ;main.c: 220: while (SSP2STATbits.BF == 0){;}
  3311                           
  3312  06C5  1C1C               	btfss	28,0	;volatile
  3313  06C6  2EC5               	goto	l137
  3314                           
  3315                           ;main.c: 221: SSP2BUF = 0x00;
  3316  06C7  0199               	clrf	25	;volatile
  3317  06C8                     l140:	
  3318                           ;main.c: 222: while (SSP2STATbits.BF == 0){;}
  3319                           
  3320  06C8  1C1C               	btfss	28,0	;volatile
  3321  06C9  2EC8               	goto	l140
  3322                           
  3323                           ;main.c: 223: SSP2BUF = 0xFF;
  3324  06CA  30FF               	movlw	255
  3325  06CB  0099               	movwf	25	;volatile
  3326  06CC                     l143:	
  3327                           ;main.c: 224: while (SSP2STATbits.BF == 0){;}
  3328                           
  3329  06CC  1C1C               	btfss	28,0	;volatile
  3330  06CD  2ECC               	goto	l143
  3331                           
  3332                           ;main.c: 226: for (unsigned int i = 0; i < 4224; i++){
  3333  06CE  0020               	movlb	0	; select bank0
  3334  06CF  01A4               	clrf	flash_read_page@i
  3335  06D0  01A5               	clrf	flash_read_page@i+1
  3336  06D1  3010               	movlw	16
  3337  06D2  0225               	subwf	flash_read_page@i+1,w
  3338  06D3  3080               	movlw	128
  3339  06D4  1903               	skipnz
  3340  06D5  0224               	subwf	flash_read_page@i,w
  3341  06D6  1803               	btfsc	3,0
  3342  06D7  2EED               	goto	l147
  3343  06D8                     l1483:	
  3344                           
  3345                           ;main.c: 227: SSP2BUF = 0xFF;
  3346  06D8  30FF               	movlw	255
  3347  06D9  0024               	movlb	4	; select bank4
  3348  06DA  0099               	movwf	25	;volatile
  3349  06DB                     l148:	
  3350                           ;main.c: 228: while (SSP2STATbits.BF == 0){;}
  3351                           
  3352  06DB  1C1C               	btfss	28,0	;volatile
  3353  06DC  2EDB               	goto	l148
  3354                           
  3355                           ;main.c: 229: serialCharOut(SSP2BUF);
  3356  06DD  0819               	movf	25,w	;volatile
  3357  06DE  3187  27F3  3186   	fcall	_serialCharOut
  3358  06E1  3001               	movlw	1
  3359  06E2  0020               	movlb	0	; select bank0
  3360  06E3  07A4               	addwf	flash_read_page@i,f
  3361  06E4  3000               	movlw	0
  3362  06E5  3DA5               	addwfc	flash_read_page@i+1,f
  3363  06E6  3010               	movlw	16
  3364  06E7  0225               	subwf	flash_read_page@i+1,w
  3365  06E8  3080               	movlw	128
  3366  06E9  1903               	skipnz
  3367  06EA  0224               	subwf	flash_read_page@i,w
  3368  06EB  1C03               	skipc
  3369  06EC  2ED8               	goto	l1483
  3370  06ED                     l147:	
  3371                           
  3372                           ;main.c: 230: }
  3373                           ;main.c: 231: RA4 = 1;
  3374  06ED  160C               	bsf	12,4	;volatile
  3375  06EE  0008               	return
  3376  06EF                     __end_of_flash_read_page:	
  3377                           
  3378                           	psect	text12
  3379  07F3                     __ptext12:	
  3380 ;; *************** function _serialCharOut *****************
  3381 ;; Defined at:
  3382 ;;		line 163 in file "main.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  toSend          1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  toSend          1    1[COMMON] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_putch
  3407 ;;		_flash_read_page
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _serialCharOut
  3413  07F3                     _serialCharOut:	
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _serialCharOut: [wreg]
  3417                           ;serialCharOut@toSend stored from wreg
  3418  07F3  00F1               	movwf	serialCharOut@toSend
  3419                           
  3420                           ;main.c: 164: TXREG = toSend;
  3421  07F4  0871               	movf	serialCharOut@toSend,w
  3422  07F5  0023               	movlb	3	; select bank3
  3423  07F6  009A               	movwf	26	;volatile
  3424  07F7                     l92:	
  3425                           ;main.c: 165: while (!TXSTAbits.TRMT) {;}
  3426                           
  3427  07F7  189E               	btfsc	30,1	;volatile
  3428  07F8  0008               	return
  3429  07F9  2FF7               	goto	l92
  3430  07FA                     __end_of_serialCharOut:	
  3431                           
  3432                           	psect	text13
  3433  0463                     __ptext13:	
  3434 ;; *************** function _init *****************
  3435 ;; Defined at:
  3436 ;;		line 70 in file "main.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;Total ram usage:        2 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    2
  3457 ;; This function calls:
  3458 ;;		_flash_spiRW
  3459 ;;		_gyro_spiRW
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _init
  3467  0463                     _init:	
  3468                           
  3469                           ;main.c: 71: OSCCONbits.IRCF = 0b1110;
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3473  0463  0021               	movlb	1	; select bank1
  3474  0464  0819               	movf	25,w	;volatile
  3475  0465  3987               	andlw	-121
  3476  0466  3870               	iorlw	112
  3477  0467  0099               	movwf	25	;volatile
  3478                           
  3479                           ;main.c: 72: WDTCONbits.WDTPS = 0b01110;
  3480  0468  0817               	movf	23,w	;volatile
  3481  0469  39C1               	andlw	-63
  3482  046A  381C               	iorlw	28
  3483  046B  0097               	movwf	23	;volatile
  3484                           
  3485                           ;main.c: 73: WDTCONbits.SWDTEN = 0;
  3486  046C  1017               	bcf	23,0	;volatile
  3487                           
  3488                           ;main.c: 75: ANSELA = 0b00000000;
  3489  046D  0023               	movlb	3	; select bank3
  3490  046E  018C               	clrf	12	;volatile
  3491                           
  3492                           ;main.c: 76: ANSELB = 0b00000000;
  3493  046F  018D               	clrf	13	;volatile
  3494                           
  3495                           ;main.c: 77: ANSELC = 0b00000000;
  3496  0470  018E               	clrf	14	;volatile
  3497                           
  3498                           ;main.c: 78: TRISA = 0b11111111;
  3499  0471  30FF               	movlw	255
  3500  0472  0021               	movlb	1	; select bank1
  3501  0473  008C               	movwf	12	;volatile
  3502                           
  3503                           ;main.c: 79: TRISB = 0b11111111;
  3504  0474  30FF               	movlw	255
  3505  0475  008D               	movwf	13	;volatile
  3506                           
  3507                           ;main.c: 80: TRISC = 0b11111111;
  3508  0476  30FF               	movlw	255
  3509  0477  008E               	movwf	14	;volatile
  3510                           
  3511                           ;main.c: 82: TRISB7 = 0;
  3512  0478  138D               	bcf	13,7	;volatile
  3513                           
  3514                           ;main.c: 83: TRISB5 = 1;
  3515  0479  168D               	bsf	13,5	;volatile
  3516                           
  3517                           ;main.c: 84: TRISA5 = 0;
  3518  047A  128C               	bcf	12,5	;volatile
  3519                           
  3520                           ;main.c: 85: TRISA4 = 0;
  3521  047B  120C               	bcf	12,4	;volatile
  3522                           
  3523                           ;main.c: 86: TRISC0 = 0;
  3524  047C  100E               	bcf	14,0	;volatile
  3525                           
  3526                           ;main.c: 87: TRISB6 = 0;
  3527  047D  130D               	bcf	13,6	;volatile
  3528                           
  3529                           ;main.c: 88: TRISC6 = 1;
  3530  047E  170E               	bsf	14,6	;volatile
  3531                           
  3532                           ;main.c: 89: TRISA2 = 1;
  3533  047F  150C               	bsf	12,2	;volatile
  3534                           
  3535                           ;main.c: 90: TRISC2 = 0;
  3536  0480  110E               	bcf	14,2	;volatile
  3537                           
  3538                           ;main.c: 93: APFCON1bits.SDO2SEL = 1;
  3539  0481  0022               	movlb	2	; select bank2
  3540  0482  169E               	bsf	30,5	;volatile
  3541                           
  3542                           ;main.c: 94: APFCON1bits.SS2SEL = 1;
  3543  0483  161E               	bsf	30,4	;volatile
  3544                           
  3545                           ;main.c: 95: SSP2CON1bits.CKP = 0;
  3546  0484  0024               	movlb	4	; select bank4
  3547  0485  121D               	bcf	29,4	;volatile
  3548                           
  3549                           ;main.c: 96: SSP2STATbits.CKE = 1;
  3550  0486  171C               	bsf	28,6	;volatile
  3551                           
  3552                           ;main.c: 97: SSP2CON1bits.SSPM0 = 0;
  3553  0487  101D               	bcf	29,0	;volatile
  3554                           
  3555                           ;main.c: 98: SSP2CON1bits.SSPM1 = 1;
  3556  0488  149D               	bsf	29,1	;volatile
  3557                           
  3558                           ;main.c: 99: SSP2CON1bits.SSPM2 = 0;
  3559  0489  111D               	bcf	29,2	;volatile
  3560                           
  3561                           ;main.c: 100: SSP2CON1bits.SSPM3 = 0;
  3562  048A  119D               	bcf	29,3	;volatile
  3563                           
  3564                           ;main.c: 101: SSP2CON1bits.SSPEN = 1;
  3565  048B  169D               	bsf	29,5	;volatile
  3566                           
  3567                           ;main.c: 104: APFCON0bits.TXCKSEL = 1;
  3568  048C  0022               	movlb	2	; select bank2
  3569  048D  151D               	bsf	29,2	;volatile
  3570                           
  3571                           ;main.c: 105: TXSTAbits.SYNC = 0;
  3572  048E  0023               	movlb	3	; select bank3
  3573  048F  121E               	bcf	30,4	;volatile
  3574                           
  3575                           ;main.c: 106: TXSTAbits.BRGH = 1;
  3576  0490  151E               	bsf	30,2	;volatile
  3577                           
  3578                           ;main.c: 107: BAUDCONbits.BRG16 = 1;
  3579  0491  159F               	bsf	31,3	;volatile
  3580                           
  3581                           ;main.c: 108: SPBRGL = 68;
  3582  0492  3044               	movlw	68
  3583  0493  009B               	movwf	27	;volatile
  3584                           
  3585                           ;main.c: 109: SPBRGH = 0;
  3586  0494  019C               	clrf	28	;volatile
  3587                           
  3588                           ;main.c: 110: RCSTAbits.SPEN = 1;
  3589  0495  179D               	bsf	29,7	;volatile
  3590                           
  3591                           ;main.c: 111: TXSTAbits.TXEN = 1;
  3592  0496  169E               	bsf	30,5	;volatile
  3593                           
  3594                           ;main.c: 114: INTCONbits.INTE = 1;
  3595  0497  160B               	bsf	11,4	;volatile
  3596                           
  3597                           ;main.c: 115: INTCONbits.GIE = 1;
  3598  0498  178B               	bsf	11,7	;volatile
  3599                           
  3600                           ;main.c: 117: RC0 = 1;
  3601  0499  0020               	movlb	0	; select bank0
  3602  049A  140E               	bsf	14,0	;volatile
  3603                           
  3604                           ;main.c: 118: RA4 = 1;
  3605  049B  160C               	bsf	12,4	;volatile
  3606                           
  3607                           ;main.c: 119: RC2 = 1;
  3608  049C  150E               	bsf	14,2	;volatile
  3609                           
  3610                           ;main.c: 121: _delay((unsigned long)((1)*((32000000UL)/4000.0)));
  3611  049D  300B               	movlw	11
  3612  049E  00FA               	movwf	??_init+1
  3613  049F  3062               	movlw	98
  3614  04A0  00F9               	movwf	??_init
  3615  04A1                     u1397:	
  3616  04A1  0BF9               	decfsz	??_init,f
  3617  04A2  2CA1               	goto	u1397
  3618  04A3  0BFA               	decfsz	??_init+1,f
  3619  04A4  2CA1               	goto	u1397
  3620  04A5  0000               	nop
  3621                           
  3622                           ;main.c: 124: payload[0] = 0x00;
  3623  04A6  0021               	movlb	1	; select bank1
  3624  04A7  01A0               	clrf	_payload^(0+128)
  3625                           
  3626                           ;main.c: 125: gyro_spiRW(0x0A, payload, 1);
  3627  04A8  30A0               	movlw	(low (_payload| 0))& (0+255)
  3628  04A9  00F9               	movwf	??_init
  3629  04AA  0879               	movf	??_init,w
  3630  04AB  00F1               	movwf	gyro_spiRW@data
  3631  04AC  3001               	movlw	1
  3632  04AD  00F2               	movwf	gyro_spiRW@dataLength
  3633  04AE  3000               	movlw	0
  3634  04AF  00F3               	movwf	gyro_spiRW@dataLength+1
  3635  04B0  300A               	movlw	10
  3636  04B1  318F  27A1  3184   	fcall	_gyro_spiRW
  3637                           
  3638                           ;main.c: 126: payload[0] = 0x21;
  3639  04B4  3021               	movlw	33
  3640  04B5  00F9               	movwf	??_init
  3641  04B6  0879               	movf	??_init,w
  3642  04B7  0021               	movlb	1	; select bank1
  3643  04B8  00A0               	movwf	_payload^(0+128)
  3644                           
  3645                           ;main.c: 127: gyro_spiRW(0x10, payload, 1);
  3646  04B9  30A0               	movlw	(low (_payload| 0))& (0+255)
  3647  04BA  00F9               	movwf	??_init
  3648  04BB  0879               	movf	??_init,w
  3649  04BC  00F1               	movwf	gyro_spiRW@data
  3650  04BD  3001               	movlw	1
  3651  04BE  00F2               	movwf	gyro_spiRW@dataLength
  3652  04BF  3000               	movlw	0
  3653  04C0  00F3               	movwf	gyro_spiRW@dataLength+1
  3654  04C1  3010               	movlw	16
  3655  04C2  318F  27A1  3184   	fcall	_gyro_spiRW
  3656                           
  3657                           ;main.c: 128: payload[0] = 0x22;
  3658  04C5  3022               	movlw	34
  3659  04C6  00F9               	movwf	??_init
  3660  04C7  0879               	movf	??_init,w
  3661  04C8  0021               	movlb	1	; select bank1
  3662  04C9  00A0               	movwf	_payload^(0+128)
  3663                           
  3664                           ;main.c: 129: gyro_spiRW(0x11, payload, 1);
  3665  04CA  30A0               	movlw	(low (_payload| 0))& (0+255)
  3666  04CB  00F9               	movwf	??_init
  3667  04CC  0879               	movf	??_init,w
  3668  04CD  00F1               	movwf	gyro_spiRW@data
  3669  04CE  3001               	movlw	1
  3670  04CF  00F2               	movwf	gyro_spiRW@dataLength
  3671  04D0  3000               	movlw	0
  3672  04D1  00F3               	movwf	gyro_spiRW@dataLength+1
  3673  04D2  3011               	movlw	17
  3674  04D3  318F  27A1  3184   	fcall	_gyro_spiRW
  3675                           
  3676                           ;main.c: 134: payload[0] = 0x20;
  3677  04D6  3020               	movlw	32
  3678  04D7  00F9               	movwf	??_init
  3679  04D8  0879               	movf	??_init,w
  3680  04D9  0021               	movlb	1	; select bank1
  3681  04DA  00A0               	movwf	_payload^(0+128)
  3682                           
  3683                           ;main.c: 135: gyro_spiRW(0x19, payload, 1);
  3684  04DB  30A0               	movlw	(low (_payload| 0))& (0+255)
  3685  04DC  00F9               	movwf	??_init
  3686  04DD  0879               	movf	??_init,w
  3687  04DE  00F1               	movwf	gyro_spiRW@data
  3688  04DF  3001               	movlw	1
  3689  04E0  00F2               	movwf	gyro_spiRW@dataLength
  3690  04E1  3000               	movlw	0
  3691  04E2  00F3               	movwf	gyro_spiRW@dataLength+1
  3692  04E3  3019               	movlw	25
  3693  04E4  318F  27A1  3184   	fcall	_gyro_spiRW
  3694                           
  3695                           ;main.c: 136: payload[0] = 0x64;
  3696  04E7  3064               	movlw	100
  3697  04E8  00F9               	movwf	??_init
  3698  04E9  0879               	movf	??_init,w
  3699  04EA  0021               	movlb	1	; select bank1
  3700  04EB  00A0               	movwf	_payload^(0+128)
  3701                           
  3702                           ;main.c: 137: gyro_spiRW(0x06, payload, 1);
  3703  04EC  30A0               	movlw	(low (_payload| 0))& (0+255)
  3704  04ED  00F9               	movwf	??_init
  3705  04EE  0879               	movf	??_init,w
  3706  04EF  00F1               	movwf	gyro_spiRW@data
  3707  04F0  3001               	movlw	1
  3708  04F1  00F2               	movwf	gyro_spiRW@dataLength
  3709  04F2  3000               	movlw	0
  3710  04F3  00F3               	movwf	gyro_spiRW@dataLength+1
  3711  04F4  3006               	movlw	6
  3712  04F5  318F  27A1  3184   	fcall	_gyro_spiRW
  3713                           
  3714                           ;main.c: 138: payload[0] = 0x07;
  3715  04F8  3007               	movlw	7
  3716  04F9  00F9               	movwf	??_init
  3717  04FA  0879               	movf	??_init,w
  3718  04FB  0021               	movlb	1	; select bank1
  3719  04FC  00A0               	movwf	_payload^(0+128)
  3720                           
  3721                           ;main.c: 139: gyro_spiRW(0x07, payload, 1);
  3722  04FD  30A0               	movlw	(low (_payload| 0))& (0+255)
  3723  04FE  00F9               	movwf	??_init
  3724  04FF  0879               	movf	??_init,w
  3725  0500  00F1               	movwf	gyro_spiRW@data
  3726  0501  3001               	movlw	1
  3727  0502  00F2               	movwf	gyro_spiRW@dataLength
  3728  0503  3000               	movlw	0
  3729  0504  00F3               	movwf	gyro_spiRW@dataLength+1
  3730  0505  3007               	movlw	7
  3731  0506  318F  27A1  3184   	fcall	_gyro_spiRW
  3732                           
  3733                           ;main.c: 140: payload[0] = 0x09;
  3734  0509  3009               	movlw	9
  3735  050A  00F9               	movwf	??_init
  3736  050B  0879               	movf	??_init,w
  3737  050C  0021               	movlb	1	; select bank1
  3738  050D  00A0               	movwf	_payload^(0+128)
  3739                           
  3740                           ;main.c: 141: gyro_spiRW(0x08, payload, 1);
  3741  050E  30A0               	movlw	(low (_payload| 0))& (0+255)
  3742  050F  00F9               	movwf	??_init
  3743  0510  0879               	movf	??_init,w
  3744  0511  00F1               	movwf	gyro_spiRW@data
  3745  0512  3001               	movlw	1
  3746  0513  00F2               	movwf	gyro_spiRW@dataLength
  3747  0514  3000               	movlw	0
  3748  0515  00F3               	movwf	gyro_spiRW@dataLength+1
  3749  0516  3008               	movlw	8
  3750  0517  318F  27A1  3184   	fcall	_gyro_spiRW
  3751                           
  3752                           ;main.c: 142: payload[0] = 0x08;
  3753  051A  3008               	movlw	8
  3754  051B  00F9               	movwf	??_init
  3755  051C  0879               	movf	??_init,w
  3756  051D  0021               	movlb	1	; select bank1
  3757  051E  00A0               	movwf	_payload^(0+128)
  3758                           
  3759                           ;main.c: 143: gyro_spiRW(0x0D, payload, 1);
  3760  051F  30A0               	movlw	(low (_payload| 0))& (0+255)
  3761  0520  00F9               	movwf	??_init
  3762  0521  0879               	movf	??_init,w
  3763  0522  00F1               	movwf	gyro_spiRW@data
  3764  0523  3001               	movlw	1
  3765  0524  00F2               	movwf	gyro_spiRW@dataLength
  3766  0525  3000               	movlw	0
  3767  0526  00F3               	movwf	gyro_spiRW@dataLength+1
  3768  0527  300D               	movlw	13
  3769  0528  318F  27A1  3184   	fcall	_gyro_spiRW
  3770                           
  3771                           ;main.c: 144: _delay((unsigned long)((1)*((32000000UL)/4000.0)));
  3772  052B  300B               	movlw	11
  3773  052C  00FA               	movwf	??_init+1
  3774  052D  3062               	movlw	98
  3775  052E  00F9               	movwf	??_init
  3776  052F                     u1407:	
  3777  052F  0BF9               	decfsz	??_init,f
  3778  0530  2D2F               	goto	u1407
  3779  0531  0BFA               	decfsz	??_init+1,f
  3780  0532  2D2F               	goto	u1407
  3781  0533  0000               	nop
  3782                           
  3783                           ;main.c: 145: payload[0] = 0x16;
  3784  0534  3016               	movlw	22
  3785  0535  00F9               	movwf	??_init
  3786  0536  0879               	movf	??_init,w
  3787  0537  0021               	movlb	1	; select bank1
  3788  0538  00A0               	movwf	_payload^(0+128)
  3789                           
  3790                           ;main.c: 146: gyro_spiRW(0x0A, payload, 1);
  3791  0539  30A0               	movlw	(low (_payload| 0))& (0+255)
  3792  053A  00F9               	movwf	??_init
  3793  053B  0879               	movf	??_init,w
  3794  053C  00F1               	movwf	gyro_spiRW@data
  3795  053D  3001               	movlw	1
  3796  053E  00F2               	movwf	gyro_spiRW@dataLength
  3797  053F  3000               	movlw	0
  3798  0540  00F3               	movwf	gyro_spiRW@dataLength+1
  3799  0541  300A               	movlw	10
  3800  0542  318F  27A1  3184   	fcall	_gyro_spiRW
  3801                           
  3802                           ;main.c: 149: flash_spiRW(0xFF, payload, 0);
  3803  0545  30A0               	movlw	(low (_payload| 0))& (0+255)
  3804  0546  00F9               	movwf	??_init
  3805  0547  0879               	movf	??_init,w
  3806  0548  00F1               	movwf	flash_spiRW@data
  3807  0549  3000               	movlw	0
  3808  054A  00F2               	movwf	flash_spiRW@dataLength
  3809  054B  00F3               	movwf	flash_spiRW@dataLength+1
  3810  054C  30FF               	movlw	255
  3811  054D  318F  2773  3184   	fcall	_flash_spiRW
  3812                           
  3813                           ;main.c: 150: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
  3814  0550  3068               	movlw	104
  3815  0551  00FA               	movwf	??_init+1
  3816  0552  30E4               	movlw	228
  3817  0553  00F9               	movwf	??_init
  3818  0554                     u1417:	
  3819  0554  0BF9               	decfsz	??_init,f
  3820  0555  2D54               	goto	u1417
  3821  0556  0BFA               	decfsz	??_init+1,f
  3822  0557  2D54               	goto	u1417
  3823  0558  0000               	nop
  3824  0559  0008               	return
  3825  055A                     __end_of_init:	
  3826                           
  3827                           	psect	text14
  3828  0FA1                     __ptext14:	
  3829 ;; *************** function _gyro_spiRW *****************
  3830 ;; Defined at:
  3831 ;;		line 179 in file "main.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  adress          1    wreg     unsigned char 
  3834 ;;  data            1    1[COMMON] PTR unsigned char 
  3835 ;;		 -> payload(32), 
  3836 ;;  dataLength      2    2[COMMON] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  adress          1    6[COMMON] unsigned char 
  3839 ;;  i               2    7[COMMON] unsigned int 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3849 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;Total ram usage:        8 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_init
  3860 ;;		_dump_gyro_fifo_to_flash
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function _gyro_spiRW
  3866  0FA1                     _gyro_spiRW:	
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _gyro_spiRW: [wreg+fsr1l+fsr1h+status,2+status,0]
  3870                           ;gyro_spiRW@adress stored from wreg
  3871  0FA1  00F6               	movwf	gyro_spiRW@adress
  3872                           
  3873                           ;main.c: 181: RC0 = 0;
  3874  0FA2  0020               	movlb	0	; select bank0
  3875  0FA3  100E               	bcf	14,0	;volatile
  3876                           
  3877                           ;main.c: 182: SSP2BUF = adress;
  3878  0FA4  0876               	movf	gyro_spiRW@adress,w
  3879  0FA5  0024               	movlb	4	; select bank4
  3880  0FA6  0099               	movwf	25	;volatile
  3881  0FA7                     l110:	
  3882                           ;main.c: 183: while (SSP2STATbits.BF == 0){;}
  3883                           
  3884  0FA7  1C1C               	btfss	28,0	;volatile
  3885  0FA8  2FA7               	goto	l110
  3886                           
  3887                           ;main.c: 185: for(unsigned int i=0; i<dataLength; i++){
  3888  0FA9  01F7               	clrf	gyro_spiRW@i
  3889  0FAA  01F8               	clrf	gyro_spiRW@i+1
  3890  0FAB                     l1359:	
  3891  0FAB  0873               	movf	gyro_spiRW@dataLength+1,w
  3892  0FAC  0278               	subwf	gyro_spiRW@i+1,w
  3893  0FAD  1D03               	skipz
  3894  0FAE  2FB1               	goto	u905
  3895  0FAF  0872               	movf	gyro_spiRW@dataLength,w
  3896  0FB0  0277               	subwf	gyro_spiRW@i,w
  3897  0FB1                     u905:	
  3898  0FB1  1803               	btfsc	3,0
  3899  0FB2  2FCC               	goto	l118
  3900                           
  3901                           ;main.c: 186: SSP2BUF = data[i];
  3902  0FB3  0877               	movf	gyro_spiRW@i,w
  3903  0FB4  0771               	addwf	gyro_spiRW@data,w
  3904  0FB5  00F4               	movwf	??_gyro_spiRW
  3905  0FB6  0874               	movf	??_gyro_spiRW,w
  3906  0FB7  0086               	movwf	6
  3907  0FB8  0187               	clrf	7
  3908  0FB9  0801               	movf	1,w
  3909  0FBA  0099               	movwf	25	;volatile
  3910  0FBB                     l115:	
  3911                           ;main.c: 187: while (SSP2STATbits.BF == 0){;}
  3912                           
  3913  0FBB  1C1C               	btfss	28,0	;volatile
  3914  0FBC  2FBB               	goto	l115
  3915                           
  3916                           ;main.c: 188: data[i] = SSP2BUF;
  3917  0FBD  0819               	movf	25,w	;volatile
  3918  0FBE  00F4               	movwf	??_gyro_spiRW
  3919  0FBF  0877               	movf	gyro_spiRW@i,w
  3920  0FC0  0771               	addwf	gyro_spiRW@data,w
  3921  0FC1  00F5               	movwf	??_gyro_spiRW+1
  3922  0FC2  0875               	movf	??_gyro_spiRW+1,w
  3923  0FC3  0086               	movwf	6
  3924  0FC4  0187               	clrf	7
  3925  0FC5  0874               	movf	??_gyro_spiRW,w
  3926  0FC6  0081               	movwf	1
  3927  0FC7  3001               	movlw	1
  3928  0FC8  07F7               	addwf	gyro_spiRW@i,f
  3929  0FC9  3000               	movlw	0
  3930  0FCA  3DF8               	addwfc	gyro_spiRW@i+1,f
  3931  0FCB  2FAB               	goto	l1359
  3932  0FCC                     l118:	
  3933                           
  3934                           ;main.c: 189: }
  3935                           ;main.c: 190: RC0 = 1;
  3936  0FCC  0020               	movlb	0	; select bank0
  3937  0FCD  140E               	bsf	14,0	;volatile
  3938  0FCE  0008               	return
  3939  0FCF                     __end_of_gyro_spiRW:	
  3940                           
  3941                           	psect	text15
  3942  0F73                     __ptext15:	
  3943 ;; *************** function _flash_spiRW *****************
  3944 ;; Defined at:
  3945 ;;		line 193 in file "main.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  adress          1    wreg     unsigned char 
  3948 ;;  data            1    1[COMMON] PTR unsigned char 
  3949 ;;		 -> payload(32), 
  3950 ;;  dataLength      2    2[COMMON] int 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  adress          1    6[COMMON] unsigned char 
  3953 ;;  i               2    7[COMMON] unsigned int 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;Total ram usage:        8 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_init
  3974 ;;		_flash_read_page
  3975 ;;		_flash_block_erase
  3976 ;;		_dump_gyro_fifo_to_flash
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _flash_spiRW
  3982  0F73                     _flash_spiRW:	
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _flash_spiRW: [wreg+fsr1l+fsr1h+status,2+status,0]
  3986                           ;flash_spiRW@adress stored from wreg
  3987  0F73  00F6               	movwf	flash_spiRW@adress
  3988                           
  3989                           ;main.c: 195: RA4 = 0;
  3990  0F74  0020               	movlb	0	; select bank0
  3991  0F75  120C               	bcf	12,4	;volatile
  3992                           
  3993                           ;main.c: 196: SSP2BUF = adress;
  3994  0F76  0876               	movf	flash_spiRW@adress,w
  3995  0F77  0024               	movlb	4	; select bank4
  3996  0F78  0099               	movwf	25	;volatile
  3997  0F79                     l122:	
  3998                           ;main.c: 197: while (SSP2STATbits.BF == 0){;}
  3999                           
  4000  0F79  1C1C               	btfss	28,0	;volatile
  4001  0F7A  2F79               	goto	l122
  4002                           
  4003                           ;main.c: 199: for(unsigned int i=0; i<dataLength; i++){
  4004  0F7B  01F7               	clrf	flash_spiRW@i
  4005  0F7C  01F8               	clrf	flash_spiRW@i+1
  4006  0F7D                     l1373:	
  4007  0F7D  0873               	movf	flash_spiRW@dataLength+1,w
  4008  0F7E  0278               	subwf	flash_spiRW@i+1,w
  4009  0F7F  1D03               	skipz
  4010  0F80  2F83               	goto	u935
  4011  0F81  0872               	movf	flash_spiRW@dataLength,w
  4012  0F82  0277               	subwf	flash_spiRW@i,w
  4013  0F83                     u935:	
  4014  0F83  1803               	btfsc	3,0
  4015  0F84  2F9E               	goto	l130
  4016                           
  4017                           ;main.c: 200: SSP2BUF = data[i];
  4018  0F85  0877               	movf	flash_spiRW@i,w
  4019  0F86  0771               	addwf	flash_spiRW@data,w
  4020  0F87  00F4               	movwf	??_flash_spiRW
  4021  0F88  0874               	movf	??_flash_spiRW,w
  4022  0F89  0086               	movwf	6
  4023  0F8A  0187               	clrf	7
  4024  0F8B  0801               	movf	1,w
  4025  0F8C  0099               	movwf	25	;volatile
  4026  0F8D                     l127:	
  4027                           ;main.c: 201: while (SSP2STATbits.BF == 0){;}
  4028                           
  4029  0F8D  1C1C               	btfss	28,0	;volatile
  4030  0F8E  2F8D               	goto	l127
  4031                           
  4032                           ;main.c: 202: data[i] = SSP2BUF;
  4033  0F8F  0819               	movf	25,w	;volatile
  4034  0F90  00F4               	movwf	??_flash_spiRW
  4035  0F91  0877               	movf	flash_spiRW@i,w
  4036  0F92  0771               	addwf	flash_spiRW@data,w
  4037  0F93  00F5               	movwf	??_flash_spiRW+1
  4038  0F94  0875               	movf	??_flash_spiRW+1,w
  4039  0F95  0086               	movwf	6
  4040  0F96  0187               	clrf	7
  4041  0F97  0874               	movf	??_flash_spiRW,w
  4042  0F98  0081               	movwf	1
  4043  0F99  3001               	movlw	1
  4044  0F9A  07F7               	addwf	flash_spiRW@i,f
  4045  0F9B  3000               	movlw	0
  4046  0F9C  3DF8               	addwfc	flash_spiRW@i+1,f
  4047  0F9D  2F7D               	goto	l1373
  4048  0F9E                     l130:	
  4049                           
  4050                           ;main.c: 203: }
  4051                           ;main.c: 204: RA4 = 1;
  4052  0F9E  0020               	movlb	0	; select bank0
  4053  0F9F  160C               	bsf	12,4	;volatile
  4054  0FA0  0008               	return
  4055  0FA1                     __end_of_flash_spiRW:	
  4056                           
  4057                           	psect	intentry
  4058  0004                     __pintentry:	
  4059 ;; *************** function _isr *****************
  4060 ;; Defined at:
  4061 ;;		line 154 in file "main.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		None
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;Total ram usage:        1 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		Interrupt level 1
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088  0004                     _isr:	
  4089                           
  4090                           ;incstack = 0
  4091  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4092                           
  4093                           ; Regs used in _isr: []
  4094  0005  3180               	pagesel	$
  4095  0006  0020               	movlb	0	; select bank0
  4096  0007  087F               	movf	127,w
  4097  0008  00F0               	movwf	??_isr
  4098                           
  4099                           ;main.c: 155: if (INTCONbits.INTF = 1){
  4100  0009  148B               	bsf	11,1	;volatile
  4101                           
  4102                           ;main.c: 158: INTCONbits.INTF = 0;
  4103  000A  108B               	bcf	11,1	;volatile
  4104  000B  0870               	movf	??_isr,w
  4105  000C  00FF               	movwf	127
  4106  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4107  000E  0009               	retfie
  4108  000F                     __end_of_isr:	
  4109  007E                     btemp	set	126	;btemp
  4110  007E                     int$flags	set	126
  4111  007E                     wtemp	set	126
  4112  007E                     wtemp0	set	126
  4113  0080                     wtemp1	set	128
  4114  0082                     wtemp2	set	130
  4115  0084                     wtemp3	set	132
  4116  0086                     wtemp4	set	134
  4117  0088                     wtemp5	set	136
  4118  007F                     wtemp6	set	127
  4119  007E                     ttemp	set	126
  4120  007E                     ttemp0	set	126
  4121  0081                     ttemp1	set	129
  4122  0084                     ttemp2	set	132
  4123  0087                     ttemp3	set	135
  4124  007F                     ttemp4	set	127
  4125  007E                     ltemp	set	126
  4126  007E                     ltemp0	set	126
  4127  0082                     ltemp1	set	130
  4128  0086                     ltemp2	set	134
  4129  0080                     ltemp3	set	128


Data Sizes:
    Strings     153
    Constant    18
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     46      49
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_7(CODE[13]), STR_6(CODE[23]), STR_5(CODE[23]), STR_4(CODE[25]), 
		 -> STR_3(CODE[20]), STR_2(CODE[14]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    flash_spiRW@data	PTR unsigned char  size(1) Largest target is 32
		 -> payload(BANK1[32]), 

    gyro_spiRW@data	PTR unsigned char  size(1) Largest target is 32
		 -> payload(BANK1[32]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    _putch->_serialCharOut
    ___lwmod->___lwdiv
    _read_flash->_flash_read_page
    _flash_read_page->_flash_spiRW
    _init->_flash_spiRW
    _init->_gyro_spiRW

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_record
    _record->_dump_gyro_fifo_to_flash
    _flash_block_erase->_printf
    _dump_gyro_fifo_to_flash->_printf
    _printf->___lwmod
    _read_flash->_flash_read_page

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   16162
                                             41 BANK0      5     5      0
                               _init
                         _read_flash
                             _record
 ---------------------------------------------------------------------------------
 (1) _record                                               4     4      0   10267
                                             37 BANK0      4     4      0
            _dump_gyro_fifo_to_flash
                  _flash_block_erase
 ---------------------------------------------------------------------------------
 (2) _flash_block_erase                                    7     4      3    3828
                                             23 BANK0      7     4      3
                        _flash_spiRW
                             _printf
 ---------------------------------------------------------------------------------
 (2) _dump_gyro_fifo_to_flash                             14    11      3    6415
                                             23 BANK0     14    11      3
                        _flash_spiRW
                         _gyro_spiRW
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              29    21      8    2047
                                              2 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                      _serialCharOut
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_flash                                           3     3      0    1827
                                              6 BANK0      3     3      0
                    _flash_read_page
 ---------------------------------------------------------------------------------
 (2) _flash_read_page                                      9     6      3    1827
                                              9 COMMON     3     0      3
                                              0 BANK0      6     6      0
                        _flash_spiRW
                      _serialCharOut
 ---------------------------------------------------------------------------------
 (5) _serialCharOut                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0    4022
                                              9 COMMON     2     2      0
                        _flash_spiRW
                         _gyro_spiRW
 ---------------------------------------------------------------------------------
 (3) _gyro_spiRW                                           8     5      3    2382
                                              1 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (3) _flash_spiRW                                          8     5      3    1640
                                              1 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _flash_spiRW
     _gyro_spiRW
   _read_flash
     _flash_read_page
       _flash_spiRW
       _serialCharOut
   _record
     _dump_gyro_fifo_to_flash
       _flash_spiRW
       _gyro_spiRW
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
           _serialCharOut
     _flash_block_erase
       _flash_spiRW
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
           _serialCharOut

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      31       5       61.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Jul 01 21:48:59 2017

                        __CFG_CP$OFF 0000                                   l92 07F7  
                ___wmul@multiplicand 0073                          __CFG_LVP$ON 0000  
                                l110 0FA7                                  l130 0F9E  
                                l122 0F79                                  l115 0FBB  
                                l140 06C8                                  l118 0FCC  
                                l134 06C2                                  l222 037C  
                                l127 0F8D                                  l143 06CC  
                                l137 06C5                                  l217 034D  
                                l147 06ED                                  l227 039E  
                                l148 06DB                                  l244 0462  
                                l328 07E0                                  l176 06F1  
                                l186 078A                                  _RC0 0070  
                                _RA4 0064                                  _RC2 0072  
                                _RB6 006E                                  _RC6 0076  
                       __CFG_CPD$OFF 0000                                  u805 07CB  
                                u725 07E1                                  u735 07E6  
                                u905 0FB1                                  u835 0F50  
                                u765 07AF                                  u935 0F83  
                                u855 0F5F                                  u785 07B9  
                                u865 0F66                                  u795 07C3  
                                u985 0397                                  _isr 0004  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                 _flash_page_address 004E                                 l1311 07B8  
                               l1321 07D3                                 l1401 0370  
                               l1317 07CA                                 l1309 07AC  
                               l1333 0F4D                                 l1335 0F59  
                               l1343 0F6E                                 l1281 0F44  
                               l1441 03F9                                 l1433 03E5  
                               l1339 0F65                                 l1443 03FE  
                               l1435 03E8                                 l1427 03C0  
                               l1373 0F7D                                 l1445 0425  
                               l1453 044C                                 l1437 03EC  
                               l1429 03C9                                 l1381 030D  
                               l1359 0FAB                                 l1287 07DA  
                               l1455 0450                                 l1543 0086  
                               l1551 00A8                                 l1457 02F1  
                               l1483 06D8                                 l1395 0350  
                               l1387 031E                                 l1811 076B  
                               l1399 0355                                 l1591 0184  
                               l1815 0791                                 l1817 0794  
                               l1595 0193                                 l1781 0FCF  
                               l1797 0739                                 l1789 071B  
                               l1799 0755                                 ?_isr 0070  
                               STR_1 05C7                                 STR_2 05EA  
                               STR_3 05B3                                 STR_4 056C  
                               STR_5 0585                                 STR_6 059C  
                               STR_7 05F8                                 STR_8 05D9  
                               u1015 03B9                                 u1035 03D8  
                               u1305 0769                                 u1315 0788  
                               u1085 0684                                 u1245 0269  
                               u1407 052F                                 u1095 0696  
                               u1255 027B                                 u1175 063B  
                               u1417 0554                                 u1265 0FDA  
                               u1185 064D                                 u1337 0774  
                               u1347 079D                                 u1357 066F  
                               u1367 02C0                                 u1295 06FC  
                               u1377 0FF8                                 u1387 06B8  
                               u1397 04A1                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                         flash_spiRW@i 0077  
                               _main 075A                                 _init 0463  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
dump_gyro_fifo_to_flash@page_address 0037                                 ltemp 007E  
                               start 000F                                 ttemp 007E  
                               wtemp 007E                        __CFG_IESO$OFF 0000  
      flash_block_erase@page_address 0037              _dump_gyro_fifo_to_flash 001F  
                              ??_isr 0070                        __CFG_PLLEN$ON 0000  
                              ?_main 0070                                ?_init 0070  
                    __end_of___lwdiv 07D8                      __end_of___lwmod 0F73  
     dump_gyro_fifo_to_flash@pattern 0042                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TXREG 019A  dump_gyro_fifo_to_flash@byte_address 0043  
                    __end_of_dpowers 0564                      __end_of_isdigit 0F46  
                              _putch 0F33                                main@i 004C  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                       __CFG_MCLRE$OFF 0000  
                    __initialization 0011                         __end_of_main 07A4  
                       __end_of_init 055A                               ??_main 0049  
                             ??_init 0079                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _ANSELC 018E                               _SPBRGH 019C  
                             _SPBRGL 019B                               _TRISA2 0462  
                             _TRISC0 0470                               _TRISA4 0464  
                             _TRISA5 0465                               _TRISC2 0472  
                             _TRISB5 046D                               _TRISB6 046E  
                             _TRISB7 046F                               _TRISC6 0476  
                     __CFG_PWRTE$OFF 0000            ??_dump_gyro_fifo_to_flash 003A  
               __size_of_flash_spiRW 002E                               ___wmul 07D8  
                     __CFG_STVREN$ON 0000                            ??___lwdiv 0075  
                          ??___lwmod 0020                       gyro_spiRW@data 0071  
                             _record 06EF                               _printf 02EC  
                          ??_isdigit 0071                __end_of_serialCharOut 07FA  
           __size_of_flash_read_page 0073              __end_of__initialization 001B  
                     __pcstackCOMMON 0070                        __end_of_putch 0F38  
    __end_of_dump_gyro_fifo_to_flash 02EC                              ??_putch 0072  
                         __pbssBANK0 004E                           __pbssBANK1 00A0  
                         __pmaintext 075A                              ?___wmul 0071  
                         __pintentry 0004                              ?_record 0070  
                            ?_printf 0022                              _SSP2BUF 0219  
                  ??_flash_read_page 0020                      flash_spiRW@data 0071  
                        gyro_spiRW@i 0077                      __size_of___wmul 001B  
                            ___lwdiv 07A4                              ___lwmod 0F46  
                         _read_flash 0FCF                      __size_of_record 006B  
                  _flash_block_erase 0605                              __ptext1 06EF  
                            __ptext2 0605                              __ptext3 001F  
                            __ptext4 02EC                              __ptext5 0F33  
                            __ptext6 0F38                              __ptext7 07D8  
                            __ptext8 0F46                              __ptext9 07A4  
                    __size_of_printf 0177                    __end_of_hexpowers 056C  
                            _dpowers 055A                   ?_flash_block_erase 0037  
                            _isdigit 0F38                         __size_of_isr 000B  
        flash_read_page@page_address 0079                              _payload 00A0  
                            clrloop0 07FB                  ??_flash_block_erase 003A  
               end_of_initialization 001B                           _gyro_spiRW 0FA1  
                          _RCSTAbits 019D                              printf@c 0036  
                            printf@f 0022                         __pstringtext 055A  
          __end_of_flash_block_erase 067C                     __CFG_FOSC$INTOSC 0000  
                        printf@width 0034                            _TXSTAbits 019E  
                      ??_flash_spiRW 0074                       __end_of___wmul 07F3  
                        _BAUDCONbits 019F                          ?_read_flash 0070  
                     __end_of_record 075A                       __end_of_printf 0463  
                start_initialization 0011                          __end_of_isr 000F  
           ?_dump_gyro_fifo_to_flash 0037                flash_spiRW@dataLength 0072  
                        ?_gyro_spiRW 0071                          _APFCON0bits 011D  
                        _APFCON1bits 011E                    flash_spiRW@adress 0076  
                           ??___wmul 0075               __size_of_serialCharOut 0007  
         __size_of_flash_block_erase 0077                  __end_of_flash_spiRW 0FA1  
                           ??_record 0045                             ??_printf 002A  
                          ___latbits 0002                        __pcstackBANK0 0020  
                       record@status 0048                      _flash_read_page 067C  
               gyro_spiRW@dataLength 0072                  __size_of_read_flash 0031  
                   ___lwdiv@dividend 0073                             ?___lwdiv 0071  
                           ?___lwmod 0079                             ?_isdigit 0070  
                __size_of_gyro_spiRW 002E                            _hexpowers 0564  
                   __CFG_WDTE$SWDTEN 0000                     ___lwdiv@quotient 0076  
                      _serialCharOut 07F3                       __size_of_putch 0005  
                     ___wmul@product 0075                            clear_ram0 07FA  
                   flash_read_page@i 0024                          _flash_spiRW 0F73  
                  ___wmul@multiplier 0071        dump_gyro_fifo_to_flash@unread 0040  
            __end_of_flash_read_page 06EF                           printf@flag 0030  
                         printf@prec 0031                       ?_serialCharOut 0070  
                   __size_of___lwdiv 0034                     __size_of___lwmod 002D  
                       ??_read_flash 0026                          _isdigit$643 0071  
                   __size_of_isdigit 000E                      ___lwdiv@divisor 0071  
                    ___lwdiv@counter 0078                             __ptext10 0FCF  
                           __ptext11 067C                             __ptext12 07F3  
                           __ptext13 0463                             __ptext14 0FA1  
                           __ptext15 0F73                         _SSP2CON1bits 021D  
                serialCharOut@toSend 0071                        __size_of_main 004A  
                   gyro_spiRW@adress 0076                        __size_of_init 00F7  
                       ??_gyro_spiRW 0074                   __end_of_read_flash 1000  
                           int$flags 007E     __size_of_dump_gyro_fifo_to_flash 02CD  
                          printf@idx 002E                            printf@val 0032  
                       _SSP2STATbits 021C                            putch@byte 0072  
                   ?_flash_read_page 0079                           _INTCONbits 000B  
                    ??_serialCharOut 0071                   __end_of_gyro_spiRW 0FCF  
                           isdigit@c 0072                             intlevel1 0000  
                   ___lwmod@dividend 007B                    __CFG_CLKOUTEN$OFF 0000  
                         _OSCCONbits 0099                             printf@ap 002F  
                    ___lwmod@divisor 0079                      ___lwmod@counter 0021  
                         _WDTCONbits 0097                         ?_flash_spiRW 0071  
